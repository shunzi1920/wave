INTSourceChangelist:2620087
Availability: Docs
Title:머티리얼 레이어 예제
Crumbs:%ROOT%, Resources
Description:UE4 에 포함된 머티리얼 레이어 예제에 대한 개요입니다.


[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources/Showcases/MaterialLayers:title%](LayeredMaterials_Topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources/Showcases/MaterialLayers:title%
	[/PARAM]
	[PARAM:description]
		%Resources/Showcases/MaterialLayers:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources/Showcases/MaterialLayers]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources/Showcases/MaterialLayers:title%](LayeredMaterials_Topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources/Showcases/MaterialLayers:title%
	[/PARAM]
	[PARAM:description]
		%Resources/Showcases/MaterialLayers:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources/Showcases/MaterialLayers]
	[/PARAM]
[/OBJECT]
[/VAR]


[REGION:fullwidth]
![](MaterialLayerRockets.png)
[/REGION]

[TOC(start:2)]

이 예제에서는 머티리얼 레이어에 대한 개념에 초점을 맞춥니다. 머티리얼 레이어란 일련의 머티리얼 함수를 서로 겹겹이 쌓는 기법으로, 여러가지 것들이 하나로 합쳐진 머티리얼을 만들 수 있습니다. 가장 좋은 점은, 이들 레이어 각각의 분리가 폴리곤 단위가 아니라 (픽셀별) 텍스처를 통해 가능하다는 점입니다. 여러 머티리얼 각각을 하나의 오브젝트에 적용할라 치면 힘든 일일텐데 말이지요.

예제는 넓은 플랫폼에 발사 준비가 끝난 여섯 대의 로켓 스태틱 메시로 구성되어 있습니다. 여섯 대의 로켓 각각은 각기 다른 머티리얼이나 머티리얼 함수를 선보이고 있습니다. 앞의 넷은 플라스틱이나 각종 메탈처럼 여러가지 실제 머티리얼을 정의하고 있으며, 오른쪽의 마지막 둘은 사실상 블렌딩된 머티리얼 함수로 네 가지 기본 머티리얼을 서로 섞어 최종 결과를 낸 모습입니다.

[REGION:fullwidth]
![](RocketBreakdown.png)
[/REGION]

1. 빨강 플라스틱 (머티리얼)
1. 크롬 (머티리얼)
1. 알루미늄 (머티리얼)
1. 구리 (머티리얼)
1. 블렌딩 결과 1 (머티리얼 함수)
1. 블렌딩 결과 2 (머티리얼 함수)



## 텍스처 합치기


이 예제의 로켓 각각은 자체적으로 여러 개의 회색조 레이어로 구성된 RGB 텍스처를 활용하며, 그 각각의 레이어는 각기 다른 기능을 합니다. 이 텍스처를 분석해 보면 아래와 같습니다:

![](RocketGrimeTex.png)(w:500)

1. **R 채널** - 때
1. **G 채널** - 긁힘과 피해
1. **B 채널** - 앰비언트 오클루전
1. **RGB 혼합** - 최종 결과

이 방법을 사용하면 하나의 텍스처를 여러 방식으로 사용할 수 있어서 각 채널마다 별도의 텍스처로 임포트하는 방식에 비해 메모리가 절약됩니다.


## 베이스 머티리얼

처음 네 로켓 각각은 일정 부분 동일한 머티리얼 함수를 사용하면서, 약간의 오차를 두어 각기 다른 물리적 속성을 나타내고 있습니다.

1. 왼쪽부터 시작해서, 처음 네 로켓 중 아무거나 선택합니다.

	![](BaseRocketSelected.png)(w:500)

1. 디테일 패널에서 _Materials_ 카테고리를 찾습니다.

	![](BaseRocketMaterialDetails.png)

1. 로켓의 머티리얼 함수를 더블클릭하여 머티리얼 에디터에서 엽니다. 이 머티리얼 함수는 이런 모습입니다:


**클릭하면 크게 볼 수 있습니다.**

[REGION:lightbox]
	[REGION:fullwidth]
	[![](RocketMLFunction2.png)](RocketMLFunction2.png)
	[/REGION]
[/REGION]

이 예제에서 _ML_Plastic01_ 머티리얼 함수는 **Make Material Properties** 노드를 사용하여 실제 머티리얼을 정의하고 있습니다. _ML_Plastic01_ 노드를 더블클릭하여 파고들어가 보면, 플라스틱 머티리얼을 정의하는 네트웍을 아래와 같이 확인할 수 있습니다:


**클릭하면 크게 볼 수 있습니다 (매우 큽니다).**

[REGION:lightbox]
[![](BaseMaterialML.png)(w:700)](BaseMaterialML.png)
[/REGION]

**Make Material Properties** 노드를 어떻게 활용하면 머티리얼 함수를 그냥 일반 머티리얼처럼 취급할 수 있는지, 그래서 머티리얼 블렌딩이 얼마나 쉬워지는지 이 예제의 다섯째 여섯째 로켓에서 확인할 수 있습니다.

## 블렌딩된 머티리얼

씬 왼쪽에서 다섯번째 로켓에는 블렌딩된 머티리얼이 들어있습니다. 이는 왼편의 구리, 알루미늄, 크롬 로켓의 머티리얼 함수에 블렌딩되는 머티리얼 함수입니다.

1. 왼쪽에서 다섯번째 로켓을 선택합니다.

	![](FifthRocketSelected.png)(w:500)

1. 디테일 패널에서 _Materials_ 카테고리로 이동합니다.

	![](BlendedMaterialDetails.png)

1. 로켓의 머티리얼 함수를 더블클릭하여 머티리얼 에디터에서 엽니다. 이 머티리얼 함수는 이런 모습입니다:

	**클릭하면 크게 볼 수 있습니다 (매우 큽니다).**

	[REGION:lightbox]
		[REGION:fullwidth]
		[![](BlendedMaterialNetwork.png)](BlendedMaterialNetwork.png)
		[/REGION]
	[/REGION]


### 초기 머티리얼 셋업하기

이제 뭐가 어떻게 돌아가나요? 구리, 알루미늄, 크롬 등 완성된 머티리얼이 셋 있습니다. 이 머티리얼 함수에서는 윗부분에 표시한 [텍스처 합치기](#텍스처합치기) 를 통해 이들 머티리얼 각각에 때와 긁힘을 적용하는 것으로 시작해 보겠습니다.

![](GrimeAndScratches.png)


### 프로퍼티 변조로 머티리얼 재사용

다음, 구리 머티리얼은 사실상 색을 다시 입힌 다음 거칠기(Roughness) 프로퍼티를 150% 올려 넷째 머티리얼 유형을 이루고 있으며, 단순한 미러링된 크롬인 다섯째 머티리얼 유형도 마찬가지입니다.

![](AdditionalBlendedMaterials.png)

### 텍스처 채널 포함 블렌딩

이제 블렌딩할 머티리얼이 총 다섯 개 있습니다. 블렌딩은 **MatLayerBlend_Standard** 노드와  RGBA 혼합 텍스처를 사용하여 이루어집니다. 텍스처와 그 채널에 대한 분석은 이렇습니다:

[REGION:fullwidth]
![](RocketBlendingTextureBreakdown.png)
[/REGION]

| **번호** | **채널** | **용도** |
| --- | --- | --- |
| **1** | RGBA | 미사용. |
| **2** | 빨강 | 로켓 원뿔 코부분. |
| **3** | 초록 | 로켓의 배기 추력 부분. |
| **4** | 파랑 | 로켓의 안정 날개 부분. |
| **5** | 알파 | 로켓의 원뿔이나 날개|
| [REGION:tablesection]_검정 픽셀은 로켓의 주요 기체를 정의합니다._[/REGION]|||


이 텍스처를 사용해서 머티리얼을 블렌딩하는 노드 셋업은 다음과 같습니다:

![](LayerBlending.png)(w:600)


### 노멀 맵 적용

블렌딩이 완료되면 **MatLayerBlend_GlobalNormal** 노드를 사용해서 전체 표면에 노멀 맵을, 노멀 맵 텍스처와 함께 적용할 수 있습니다:

![](NormalMapGlobal.png)

### 구멍과 앰비언트 오클루전 추가

앞서 선보인 혼합 텍스처에는 파랑 채널 안에 앰비언트 오클루전과 구멍 맵 데이터가 들어 있습니다. 머티리얼 제작 마지막 단계에서는 이 데이터를 전체 표면에 적용하기 위해 **MatLayerBlend_TintAllChannels** 노드를 사용하는 것으로, 들어오는 결과에 텍스처 값을 곱하는 것입니다. 이 경우 그저 텍스처의 파랑 채널을 사용하여 색조를 입히고, 거기에 앰비언트 모클루전 맵을 활용하면 됩니다.


![](AmbientOcclusionApplied.png)


## 관련 글타래

* [](Engine/Rendering/Materials)
* [](Engine/Rendering/Materials\IntroductionToMaterials)
* [](Engine/Rendering/Materials\Functions)
