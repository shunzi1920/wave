INTSourceChangelist:2176330
Availability:Docs
Title:1.2 - マテリアル関数
Crumbs:%ROOT%, Resources, Resources/ContentExamples/MaterialAdvanced
Description:マテリアルの高度な例の概要、例 1.2：マテリアル関数

[TOC(start:2 end:2)]

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources/ContentExamples/MaterialAdvanced/1_2:title%](Resources\ContentExamples\MaterialAdvanced\rendering_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%\rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources/ContentExamples/MaterialAdvanced/1_2:title%
	[/PARAM]
	[PARAM:description]
		%Resources/ContentExamples/MaterialAdvanced/1_2:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources/ContentExamples/MaterialAdvanced/1_2]
	[/PARAM]
[/OBJECT]
[/VAR]

マテリアル関数は基本的にノードグラフを断片化したもので、プログラミング言語の関数やブループリントの関数のようなものです。値を出力しますが、出力値はグラフに依存する関数です。出力値はスカラー値、ベクター値、またはテクスチャサンプルなどになります。この場合、マテリアル全体です。

左側の例は標準のマテリアルで、右側の例は左と全く同じマテリアルですがマテリアル関数を使用しています。マテリアルプロパティ内のマテリアル属性を使用するチェックフラグを有効にしなくてはいけません。

単独のマテリアル関数のワークフローはあまり筋が通ったものではなく、かなり複雑なものに見えます。次の例でマテリアル関数の利点を紹介します。
