Availability: Public
Title:2.3 - Blueprint Interface
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/Blueprints
Description:An overview of the Advanced Blueprints example level, example 2.3: Blueprint Interface
Related: Engine/Blueprints/Overview 
Related: Engine/Blueprints/UserGuide/Types/Interface
Related: Engine/Blueprints/UserGuide/Variables
Related: Engine/Blueprints/UserGuide/BlueprintComms
Related: Engine/Blueprints/UserGuide/Types/MacroLibrary
Related: Engine/Animation/AnimBlueprints/EventGraph
Related: Engine/Blueprints/UserGuide/UserConstructionScript
Related: Gameplay/HowTo/SetUpInput/Blueprints



[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources\ContentExamples\Blueprints_Advanced\2_3:title%](blueprint_advanced_2_3_topic.png)
	[/PARAM]
	[PARAM:title]
		%Resources\ContentExamples\Blueprints_Advanced\2_3:title%
	[/PARAM]
	[PARAM:description]
		%Resources\ContentExamples\Blueprints_Advanced\2_3:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources\ContentExamples\Blueprints_Advanced\2_3]
	[/PARAM]
[/OBJECT]
[/VAR]


[REGION:fullwidth]

![](blueprint_advanced_2_3.png)

## Overview

[Blueprint Interfaces](Engine/Blueprints\UserGuide\Types\Interface) allow one _Blueprint_ to trigger an event or function in another _Blueprint_. Both of these _Blueprints_ must implement the _Blueprint Interface_ in their **Blueprint Properties**.
In this example, the **BP_Button** _Blueprint_ causes the gears in the **BP_Gears** _Blueprint_ to start or stop spinning.


There are two separate _Blueprints_ here: A button _Blueprint_ with a box component to use as a trigger, and a _Blueprint_ made up of a collection of gears that will start rotating while the button is pressed. A third asset, a _Blueprint Interface_, is employed as a means of sending information from one _Blueprint_ to another. 


## BP_Button

[REGION:lightbox]
[![](AdvBP_2_3_Btn_EventGraph.png)](AdvBP_2_3_Btn_EventGraph.png)
[/REGION]
[REGION:caption]
Click for full size or **right-click** and Save As.
[/REGION]

Shape components can either be a box, a capsule, or a sphere, and are simple shapes used primarily for collision detection. The box component in **BP_Button** is set to only overlap Pawns, so the **OnComponentBeginOverlap** event in the script will only fire when a Pawn overlaps the box.

The **Toggle** interface message nodes have the **Target Blueprint** _Actor_ variable connected to their **Target** pins.  The **Target Blueprint** variable is public, and set to **BP_Gears** for the instance of the button placed in the level.  These interface message nodes execute the **Toggle** event present in the **BP_Gears** _Blueprint_ as a result.


## BP_Gears


[REGION:lightbox]
[![](AdvBP_2_3_Grs_EventGraph.png)](AdvBP_2_3_Grs_EventGraph.png)
[/REGION]
[REGION:caption]
Click for full size or **right-click** and Save As.
[/REGION]

The gears _Blueprint_ implements the interface in the form of a special **Toggle** interface event, connected to nodes that causes the gear _Static Mesh Components_ to stop and start turning. This event is triggered by the **Toggle** interface message nodes in **BP_Button**.

Interface variables - The interface event employed by these _Blueprints_ also outputs a bool variable, which is used to tell the gears _Blueprint_ whether it should stop or start turning when the interface event is fired. Interfaces can also return variables to the _Blueprint_ that called the event, which can be useful for passing information back and forth between _Blueprints_ in both directions.

In those cases, however, the implementation in the **Target** _Blueprint_ is done with functions instead of events.

[/REGION]
