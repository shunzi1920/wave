INTSourceChangelist:2618806
Availability:Public
Title:1.2 - マテリアル インスタンス
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/Materials
Description:マテリアル インスタンスのサンプル レベルの概要、サンプル 1.2：マテリアル インスタンス
Related:Engine/Rendering/Materials/MaterialInstances
Related:Engine/Rendering/Materials/PhysicallyBased
Related:Engine/Rendering/Materials
Related:Engine/Rendering/Materials/ExpressionReference
Related:Engine/Rendering/Materials/MaterialInputs
Related:Engine/Rendering/Materials/LayeredMaterials
Related:Engine/Actors/DecalActor



[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources/ContentExamples/MaterialInstances/1_2:title%](Resources\ContentExamples\MaterialInstances\rendering_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources/ContentExamples/MaterialInstances/1_2:title%
	[/PARAM]
	[PARAM:description]
		%Resources/ContentExamples/MaterialInstances/1_2:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources/ContentExamples/MaterialInstances/1_2]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources/ContentExamples/MaterialInstances/1_2:title%](Resources\ContentExamples\MaterialInstances\rendering_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources/ContentExamples/MaterialInstances/1_2:title%
	[/PARAM]
	[PARAM:description]
		%Resources/ContentExamples/MaterialInstances/1_2:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources/ContentExamples/MaterialInstances/1_2]
	[/PARAM]
[/OBJECT]
[/VAR]

<div align="center">
![](MI_1_2_001.png)(w:900)
</div>

**マテリアル インスタンス** は子マテリアルです。つまり、 **Parent マテリアル** が持つものをすべて持ちますが、どの **パラメータ** もマテリアル インスタンス上で個別に修正することができます。

何故インスタンスを使用するのでしょうか？マテリアルは非常に柔軟性があり、マテリアル エディタは想像しうるほぼすべてのものを生き生きとしたものにします。しかし、テクニカル アーティストに複雑なシェーダー デザインを委ね、そのマテリアルを使用し、マテリアル インスタンスを作成し、そのテクニカル アーティストが公開したテクスチャやパラメータを単に調整したい場合もあるでしょう。このような場合にインスタンスが役立ちます。

インスタンス の 2 番目の利点は処理速度です。マテリアルの変更は、全ての変更に対してシェーダーをコンパイルする必要があるため時間を要します。既にシェーダーがコンパイル済みであるため、 マテリアル インスタンス のパラメータ変更は即時に行うことができます (この例外は、StaticSwitchParameter の変更で、シェーダーを再コンパイルする必要があるため常に遅くなります。StaticSwitchesはシェーダーの複雑性を変更することができます)。これらの理由から、マテリアルに微調整を加えたい場合、処理速度が断然早い マテリアル インスタンス を推奨します。

