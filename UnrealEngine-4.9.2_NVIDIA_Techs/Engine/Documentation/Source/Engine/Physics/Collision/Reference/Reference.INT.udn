Availability: Public
Title:Static Mesh Collision Reference
Crumbs: %ROOT%, Engine, Engine/Physics, Engine/Physics/Collision
Description:Content guide to creating and setting up collision geometry.

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Physics/Collision/Reference:title%](Engine/Physics/Collision/Reference/physics_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%\rendering_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Physics/Collision:/Reference:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Physics/Collision/Reference:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Physics/Collision/Reference]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC(start:2 end:2)]

## Overview

As graphical detail has increased, it is important to ensure that collision within the game remains simple. This is because of two reasons; it is much faster to calculate collision 
against a few polygons and it is a much smoother experience for the player as then the player does not get snagged on a small piece geometry. 

[REGION:tip]
All collision shapes produced in the **Static Mesh Editor** can be moved, rotated, and scaled after they are created. You can create more than one collision shape per Static Mesh so 
you can get the fidelity you need in your Static Mesh's collision.

This is most useful with the simple collision shapes (box, sphere, and capsule), but can be used with the Convex Hull generator and K-DOP hulls.
[/REGION]

## Creating Skeletal Mesh Collision hulls

Please see **[PhAT User Guide](Engine/Physics/PhAT)** on how to create collision hulls used by Skeletal Meshes.

## Creating Static Mesh Collision Hulls in the Static Mesh Editor

![](COLREF_collisionMenu.png)

### K-DOP



[REGION:raw]
![](COLREF_collisionMenu_KDOP.png)
[/REGION]

There are a series of menu options in the Static Mesh Editor under the **Collision** menu entry, named _##DOP_, these are the **K-DOP** simple collision generators. 
**K-DOP** is a type of bounding volume, which stands for _K discrete oriented polytope_ (where K is the number of axis aligned planes). Basically it takes K axis-aligned planes
and pushes them as close to the mesh as it can. The resulting shape is used as a collision hull. In the Static Mesh Editor K can be:


* **10** - Box with 4 edges beveled - you can choose X- Y- or Z-aligned edges.
* **18** - Box with all edges beveled.
* **26** - Box with all edges and corners beveled.

See below for an example. This tool is quite handy for packages full of pipes, pillars, and railings:

![kdop_sizes.jpg](kdop_sizes.jpg)


### Creating a Collision Hull Using the Auto Convex Collision Tool

[REGION:raw]
![](COLREF_collisionMenu_Auto.png)
[/REGION]

The Static Mesh Editor has the capability to generate collision using a number of convex hulls.

![Collision_CreateCollisionHullWithAutoConvex_0.jpg](Collision_CreateCollisionHullWithAutoConvex_0.png)(convert:false)

This rounded cube would probably work just fine with **6DOP Simplified Collision** but let us assume it needs more than that.

Selecting **Collision Menu -> Auto Convex Collision** will bring up this panel in the lower right hand side:

![Collision_CreateCollisionHullWithAutoConvex_1.jpg](Collision_CreateCollisionHullWithAutoConvex_1.png)(convert:false)

* **Max Hulls** - Determines the number of hulls to create to best match the shape of the object.
* **Max Hull Verts** - Maximum number of collision hull vertices. Increasing this value increase how complex the collision hulls are allowed to be.
* **Apply** - Adds collision to the object based on the settings above.
* **Defaults** - Resets the values of Max Hulls and Max Hull Verts to the values seen in the image above.

![Collision_CreateCollisionHullWithAutoConvex_2.jpg](Collision_CreateCollisionHullWithAutoConvex_2.png)(convert:false)

As you can see, the auto convex collision is reasonably accurate.

### Creating a Collision Using Simple Shapes

[REGION:raw]
![](COLREF_collisionMenu_BuildYourOwn.png)
[/REGION]

These options create basic collision shapes:

[REGION:raw]
![](COLREF_BuildYourOwn_01.png)(convert:false)
[/REGION]

Once a simple collision shape is created, it can be moved, rotated, and scaled into the desired position. You can create more than one collision shape for more complex Static Meshes.

| **Control** | **Action** |
| --- | --- |
| **W, E, R** | Switch between Translation, Rotation, and Scale tools. |
| **Delete** | Will delete the currently selected Physics Body or Bodies. |
| **F** | Will focus on the currently selected Physics Body or Bodies. |
| **Ctrl + Left Click** | Adds a Physics Body to the selection. |
| **Alt + Left Drag (On a manipulation widget)** | Duplicates a Physics Body. |


### Creating a Collision Hull Using Your 3D Content Creation Package

Please see **[FBX Static Mesh Pipeline](Engine/Content/FBX/StaticMeshes#Collision)** on how to create Static Mesh collision hulls within a 3D content creation package.


## Collision Responses

Unreal Engine 4 is pretty drastically different in terms of how you can have collision objects interact with each other. Now each object is an arbitrary object type 
(a Static Mesh can be in the **WorldDynamic** collision response group for example), that can choose to **ignore**, **block**, or **overlap** an object from another response group.

The short version is that instead of an object being "I will collide with all things set to collide" and object can be set to "I will collide with only objects that are 
_Pawns_ and I will overlap _WorldDynamic_ while ignoring everything else." Further, using that object that will only collide with _Pawns_, and object in the _Pawn_ response 
group can choose to **ignore** the group our pawn collider exists in.

It can get really complicated but the tools at your disposal make it easy to get a handle on. See the **[Collision Responses](Engine/Physics\Collision)** documentation for more info.


## Reviewing Collision In-Game

There are several console commands you can use in-game for reviewing the collision setup. Here are a few. Typing them toggles them on and off.

* **show COLLISION** - This will draw all collision models and blocking volumes in use in the level. 

![](COLREF_showCollision.png)(w:900)

* **stat game** - This shows you various useful stats on how long different types of collision are taking.

![](Collision_StatGame.png)(w:900)






