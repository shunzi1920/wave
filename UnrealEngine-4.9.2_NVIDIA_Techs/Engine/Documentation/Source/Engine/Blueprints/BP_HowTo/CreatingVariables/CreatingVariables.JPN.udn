INTSourceChangelist:2457628
Availability:Public
Title:変数を使用して作業する
Crumbs:
Description:ブループリントで変数を作成し使用するためのガイド

[OBJECT:Redirect]
[PARAM:link]
[%Engine/Blueprints/UserGuide/Variables:title%](Engine/Blueprints/UserGuide/Variables "%Engine/Blueprints/UserGuide/Variables:description%")
[/PARAM]
[/OBJECT]

<!--
[TOC(start:2)]

## 概要

**変数** とは、ゲームワールド内の **オブジェクト** や **アクタ** の値または参照を保持するプロパティです。変数は、変数が存在するブループリント内部でのみアクセス可能に設定できます。またはレベルに配置されたブループリントのインスタンスで作業するデザイナがその値にアクセスし、変更できるように外部からアクセス可能になるように、**公開** することもできます。これにより、敵のヘルスなどのゲームプレイ要素でのイタレーションをはるかに容易に調整、微調整ができます。 

このページは変数の作成と編集方法、様々な変数の設定での作業、入出力ピンの変数化、およびプレイヤーがトリガー ボックスを出入りするときのライトの色を定義するために使用する変数のサンプル使用ケースについて説明します。 

## 変数の作成

[EXCERPT:creatingvars]

ブループリント内での変数の作成は、以下の手順で行うことができます。 

1. [ブループリントを作成](Engine/Blueprints/UserGuide/Types/ClassBlueprint/Creation) し、**[グラフ]** タブで開きます。 

1. 新しい変数を作成するには、**[MyBlueprint]** ウィンドウで変数リスト ヘッダー ![](Engine\Blueprints\Editor\UIComponents\MyBlueprint\myblueprint_variable.png) 上にある **Add Button** ![](Engine\Blueprints\Editor\UIComponents\MyBlueprint\plus_Button.png) ボタンをクリックします。

	![](MyBlueprintPane_createVar.png)

1. 新しい変数が作成されます。名前を付けるよう促されます。 

	![](HT5.png)

	ブループリントの名前を入力し、 **[詳細]** パネルに進んで変数のプロパティを調整します。

1. **[詳細]** パネルには変数の使用とアクセスの方法を定義するいくつかの設定があります。 

	![](HT6.png)

	[REGION:note]
	変数の **デフォルト値** を設定するには、まずブループリントを **コンパイル** する必要があります。 
	[/REGION]

| オプション| 説明 |
|----------------------|----------------------|
| **Variable Name** | 変数の名前です。 |
|**Variable Type** | ドロップダウン メニューから [変数の型](Engine/Blueprints/UserGuide/Variables#変数の型) を設定し、変数が [配列](Engine/Blueprints/BP_HowTo/WorkingWithArrays) かどうかを判断します。|
| **Editable** | ブループリントのインスタンス上で変数がパブリックで編集可能かどうかを指定します。 |
| **Tooltip** | 変数上にカーソルがあると変数の追加情報が表示されます。 |
| **Expose on Spawn** | ブループリントをスポーン時にピンとして変数をエクスポーズします。 |
| **Private** | この変数をプライベートにします（派生ブループリントによる修正不可） |
| **Expose to Matinee** | この変数を編集のためにマチネにエクスポーズします。 |
| **Config Variable** | config ファイルから変数を設定することができます。 |
| **Category** | 与えられたラベル毎に変数を分類することができます。変数はラベル毎にソートされます。 |
| **Replication** | この変数をネットワーク上で [レプリケーション](Gameplay/HowTo/Networking/ReplicateVariable/Blueprints) するか否かを指定します。 |

**[詳細]** パネルを拡張することで定義できるいくつかのシリアル化オプションがあります。 

![](HT37.png)

ここでは **Transient** オプションで読み込み時に変数をシリアル化、ゼロを入れるかを設定することができます。**SaveGame** オプションで保存したゲームに対して変数をシリアル化するか否かを設定することもできます。

[/EXCERPT:creatingvars]

### 編集可能な変数

[EXCERPT:editingvars]

変数を **Editable** (編集可能) に設定すると、変数が存在するブループリントの外部から変数を修正することができます。 

[REGION:raw]
![](HT21.png)
[/REGION]

**[詳細]** パネルの **Editable** 設定で変数を編集可能にすることもできます。または、**MyBlueprint** ウィンドウ内の変数の隣にある **閉じた目** の形のアイコンをクリックして行うこともできます。目のアイコンが閉じている場合、変数は編集不可に設定されています (これはデフォルト設定です)。目のアイコンが開いていると、変数は **Public** (または以下の画面のように **Editable**) に設定されます。 

変数を編集可能に設定したらメイン エディタ ウィンドウの **[詳細]** パネルから変数の値を設定できます。 

![](HT23.png)

上の画像では、変数、**LightColor** が編集可能に設定されています。これで、レベル エディタの **[詳細]** パネルで値を設定できます。 

[/EXCERPT:editingvars]

### 変数のツールチップ

エディタで変数上にマウスをかざすと表示される変数の **ツールチップ** を追加することもできます。 

![](HT25.png)

変数の **[詳細]** パネルからツールチップを追加することができます。これを行うと、変数が **Public** に設定されている場合、目のアイコンが黄色から緑に変化します。これは、その変数に対してツールチップが書き込まれたことを示しています。

[REGION:raw]
![](HT24.png)
[/REGION]

### スポーン時にエクスポーズ

**Expose on Spawn** オプションでは変数が存在するブループリントのスポーン時に変数をアクセス可能にするかを設定することができます。 

![](HT26.png)

上の画面では **LightColor** と呼ばれる変数があります。これは **Expose on Spawn** に設定される Linear Color プロパティです。この変数は **Set Light Color** ノードと **LightColor** 変数を使用してライトの色を決めるポイントライトのブループリントで実装されます。 

以下は別のブループリント内で、Point Light ブループリントをスポーンするためにスクリプトを使用しています。**LightColor** 変数がスポーン時にエクスポーズするように設定されているため、この値を設定するオプションは **Spawn Actor from Class** ノードで利用できます。これにより、ゲームワールドでライトがスポーンするときの色を設定することができます。 

![](HT27.png)

### プライベート変数

変数上で **Private** オプションにチェックを入れると、外部ブループリントから変数が修正されないようにします。 

例えば、以下にプライベートに設定されていない変数があります。 

![](HT42.png)

別のブループリント内で、この変数を含むブループリントをスポーンすることを選択できます。次に、**Return Value** から変数にアクセスすることができます。 

![](HT43.png)

しかし、Private と設定すると以下のようになります。 

![](HT41.png)

再度ブループリントをスポーンし、アクセスできない変数に再度アクセスを試みます。 

![](HT44.png)


### マチネにエクスポーズ

**マチネ** で変数が影響を受けるようにするには、**Expose to Matinee** オプションにチェックを入れる必要があります。 

![](HT31.png)

以下ではマチネを作成し、ブループリントを含むトラックを追加しました。マチネでブループリントにある Linear Color 変数を修正します。これは、**LinearColor Property Track** を追加して行います。 

![](HT32.png)

すると、LinearColor 変数を選択し、ブループリント (**LightColor**) プロパティから修正するように促されます。 

![](HT33.png)

これを行ったら、トラックにキーを追加して時間を伴う変数の値を修正することができます。 

![](HT34.png)

[REGION:note]
**マチネ** での作業の詳しい情報については [](Engine/Matinee) ドキュメントをご覧ください。 
[/REGION]


## 変数化

[EXCERPT:promote]

**Promote to Variable** (変数化) オプションを使用して変数を作成することもできます。 

ブループリント ノード上の任意の入出力ピン上で **右クリック** して **Promote to Variable** オプションを選択します。 

![](HT38.png)

**New Light Color** ピン上で右クリックして **Promote to Variable** を選択すると変数に **New Light Color** 値を代入することができます。 

![](HT40.png)

または入出力ピンをドラッグ して **Promote to Variable** オプションを選択することができます。 

![](HT39.png)

[/EXCERPT:promote]


## ブループリントで変数にアクセスする

ブループリントで変数の作業をする場合、通常以下の 2 つのいずれかの方法で行います。**Get** ノード (ゲッターといいます) を使用して変数の値を取得します。または **Set** ノード (セッターといいます) を使用して変数の値を設定します。 

![](HT45.png)

変数に対して **Set** ノード (上の 1) または **Get** ノード (上の 2) を作成するには、グラフ内で右クリックして、**Set (変数名)** または **Get (変数名)** と入力します。使用可能な別の方法としては、**Ctrl** キーを押して **MyBlueprint** ウィンドウから変数をドラッグして **Get** ノードを作成するか、または **Alt** キーを押して **MyBlueprint** ウィンドウから変数をドラッグして **Set** ノードを作成します。 

<!--
## 変数の使用例

この例では変数を使用してトリガーボックスに入るときのライトの色を変更します。 

[REGION:note]
この例では、**Blueprint Third Person** テンプレートを使用して新規プロジェクトを作成しました。 
[/REGION]

1. プロジェクト内の **[モード]** メニューから **ポイントライト** と **ボックス トリガー** をレベル内にドラッグします。 

	![](HT1.png)

	上の画像ではボックスの上にライトを配置し、それをレベルの隅に移動し、さらに見えるようにしました。ライトとトリガー近くの Player Start も移動しました。 

1.	**ポイントライト** と **ボックス トリガー** の両方を選択し、**[詳細]** パネルをで **Replace With Composited Blueprint** を選択します。 

	![](HT2.png)

	これで、新規ブループリントが作成され、こうした 2 つのアセットをブループリントの [コンポーネント](Engine/Blueprints/UserGuide/Components) として含みます。 

1.	開いたウィンドウでブループリントに名前を付けて **Create Blueprint** を選択します。 

1.	ブループリントの **Components** タブ内で **ボックス トリガー** をクリックし、**[詳細]** パネルで **Hidden in Game** のチェックを外します。 

	![](HT3.png)

	これでゲーム起動時にレベル内にボックス トリガーが表示されます。 

1. 新しい変数を作成するには、**[MyBlueprint]** ウィンドウで変数リスト ヘッダー ![](Engine\Blueprints\Editor\UIComponents\MyBlueprint\myblueprint_variable.png) 上にある **Add Button** ![](Engine\Blueprints\Editor\UIComponents\MyBlueprint\plus_Button.png) ボタンをクリックします。

	![](MyBlueprintPane_createVar.png)

1.	必要に応じて名前を変更できる変数が追加されます。この例では、**LightColor** と呼びます。 

	![](HT5.png)

1.	**[詳細]** パネルで **Variable Type** ドロップダウン メニューをクリックし、**LinearColor** を検索し、選択します。 

	![](HT8.png)

1.	**[コンパイル]** ボタンをクリックし、ブループリントをコンパイルします。 

	![](HT10.png)

	ブループリントのコンパイルに成功したら、変数の **デフォルト値** を設定できます。 

1.	**[詳細]** パネルの**[Default Value]** でカラーピッカー ボックスをクリックします。 

	![](HT11.png)

1.	**カラーピッカー** ウィンドウで変数のデフォルト色設定の色を選択します。 

	![](HT12.png)

1.	**MyBlueprint** ウィンドウで、**TriggerBox** を **右クリック** し、 **Add Event** を選択し、**Add OnComponentBeginOverlap** を選択します。 

	![](HT13.png)

1.	前のステップを繰り返して **Add OnActorEndOverlap** を選択します。 

1.	**Ctrl** を押しながら、 **PointLight** コンポーネントをグラフにドラッグします。 

	![](HT14.png)

1.	**Ctrl** を押しながら、**LightColor** 変数をドラッグします。 

1.	 **PointLight** 変数を引き出して **Set Light Color** ノードを検索し、追加します。 

	![](HT15.png)

1.	**LightColor** を **Set Light Color** ノードに接続し、**Set Light Color** ノードのコピーをもうひとつ作成し、以下のように接続します。

	![](HT16.png)

1.	**Alt** を押しながら、**LightColor** 変数をドラッグします。

	![](HT17.png)

1.	**Set** ノードでボックスをクリックして変数を設定する色を定義します。 

1.	**Set** ノードをコピーし、別の色を選択し、以下のように接続します。 

	![](HT18.png)

	上の画像では、**LightColor** プロパティの値をボックスをオーバーラップするときにある色に設定し、ボックスを離れるときに別の色に設定しています。 

1.	**[コンパイル]** ボタンをクリックし、ブループリントを終了し、 **[Play]** (再生) をクリックしてエディタで再生します。

	![](HT19.png)(w:340)

	キャラクターがトリガーボックスに入ると色は変わります。 

	![](HT20.png)(w:340)

	トリガーボックスを離れると別の色に変わります。 

	-->

	-->
