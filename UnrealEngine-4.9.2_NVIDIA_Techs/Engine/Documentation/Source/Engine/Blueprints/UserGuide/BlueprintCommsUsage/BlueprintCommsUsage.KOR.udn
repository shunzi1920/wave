INTSourceChangelist:2599239
Availability:Public
Title:블루프린트 통신 방법
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/UserGuide
Description:블루프린트 통신의 여러가지 방법을 언제 사용할지에 대한 개요입니다.
Related: Engine\Blueprints\UserGuide\BlueprintComms
Related: Engine/Blueprints/UserGuide/EventDispatcher
Related: Engine/Blueprints/UserGuide/CastNodes
Related: Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%](Engine\Blueprints\UserGuide\bp_comms_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%
	[/PARAM]
	[PARAM:description]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine\Blueprints\UserGuide\BlueprintCommsUsage]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%](Engine\Blueprints\UserGuide\bp_comms_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%
	[/PARAM]
	[PARAM:description]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine\Blueprints\UserGuide\BlueprintCommsUsage]
	[/PARAM]
[/OBJECT]
[/VAR]




[TOC(start:2 end:2)]

**블루프린트** 작업을 할 때, 가끔씩 다른 **블루프린트** 에 들어있는 함수, 이벤트, 변수에 접근하고 싶을 때가 있습니다. 이를 일컬어 **블루프린트 통신** 이라고 하며, 필요에 따라 다수의 **블루프린트** 사이의 통신 및 접근을 하는 방법은 여러가지 있습니다.

아래 개요는 다양한 통신 방법 및 사용 예로, 자세한 문서는 각 부분의 링크를 참고하세요.

## 직접 블루프린트 통신

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\2_9.png)

**직접 블루프린트 통신** (또는 **블루프린트 통신**) 은 가장 흔한 통신 방법으로, 특정 시점에서 서로 대화를 하고자 하는 것으로 알고있는 **블루프린트 액터** 가 
두 개 있을 때 좋습니다.
	
이러한 통신 유형은 항상 1:1, 즉 한 블루프린트 (**작업 블루프린트**) 가 다른 블루프린트 (**타겟 블루프린트**) 로의 접근을 요청하는 것입니다. 
**블루프린트 통신** 을 이용하는 가장 단순한 방법은, 공개적으로 노출된 오브젝트 변수를 통해 **타겟 블루프린트** 로의 레퍼런스를 구한 다음 접근하고자 하는 
블루프린트의 인스턴스를 지정하는 것입니다.

보다 자세한 정보는 [](Engine\Blueprints\UserGuide\BlueprintComms) 문서를 참고하세요.

### 사용 시점

**블루프린트 통신** 을 사용하기 좋은 예는 아래와 같습니다:
	
*	**레벨의 한 액터가 다른 액터와 통신하도록 하고자 할 때.**
	*	레벨에 있는 스위치를 조작하면 특정 문을 열거나 라이트를 켭니다 (이들 각각은 별도의 블루프린트입니다).

직접 블루프린트 통신 셋업 길잡이는 [](Engine\Blueprints\BP_HowTo\DirectBlueprintComs) 문서를 참고하세요.


	
## 이벤트 디스패처

![](OpenDoorEventDispatch.png)

**Event Dispatcher**, 이벤트 디스패처는 월드에 무언가가 벌어졌음을 알릴 때, 그 정보를 가지고 무얼 하든 상관 없을 때 최적입니다. 이 패턴이 (항상은 아니더라도) 종종 사용되는 경우는,
어떤 것이 무언가를 (예로 레벨 블루프린트가 보스를) 스폰했는데, 그 스폰된 것에 대해 무언가 중요한 일이 벌어졌을 때 알림을 받기 위해 이벤트 디스패처에 걸어주는 것입니다.

보스 예제에서, 플레이어가 보스를 처치하면 문을 열도록 하고싶은 경우, 레벨 블루프린트가 보스를 스폰시킨 이후, 거기서 OnDied 이벤트 디스패처를 문열림 이벤트에 걸어주면 됩니다.
그렇게 하면 보스는 그냥 어느 레벨에 배치되어 있든지 상관없이, 그 처치 여부를 알고싶은 애들이 걸어줄 수 있도록 갈고리만 주면 되는 것입니다.
굳이 잠긴 문일 필요도 없지요. 부하 전부에 OnDied 델리게이트를 걸어두고, 보스를 처치하면 뿔뿔히 흩어지도록 할 수도 있겠지요. 하나의 이벤트 디스패처에 원하는 수 만큼 걸어줄 수 있고, 
그러면 그 이벤트 디스패처 호출시 거기 바인딩된 모든 이벤트가 발동되는 것입니다.

정리하자면 이벤트 디스패처는, 누군가 연관된 것에 어떤 일이 벌어졌다고 알리는 데 쓰는 것입니다. 이벤트 디스패처에 호출되는 이벤트는 여러가지 블루프린트 인스턴스 
또는 게임플레이 일정 시점마다 각기 다를 수 있습니다.


좀 더 자세한 정보는 [](Engine/Blueprints/UserGuide/EventDispatcher) 문서를 참고하세요.

### 사용 시점
 
**이벤트 디스패처** 를 사용할 수 있는 경우는 아래 예와 같습니다:

*	**캐릭터 블루프린트에서 레벨 블루프린트로 통신하고자 합니다.**
	*	플레이어 캐릭터가 레벨 업 하여 기존에 잠긴 영역을 열고자 합니다.
	*	플레이어 캐릭터가 레벨에 무언가가 벌어지는 액션 버튼을 눌렀습니다.
*	**스폰된 액터에 무언가 실행되면 이벤트가 발동되도록 하고 싶습니다.** 
	*	보스를 스폰하고, 보스가 죽으면 월드에 보상이 스폰되는 이벤트가 발동됩니다.
	*	레벨에 (웨폰, 헬쓰, 부스트 등의) 아이템을 스폰하고, 이벤트를 통해 아이템과 캐릭터에게 픽업되었음을 알립니다.

이벤트 디스패처 셋업 관련 길잡이는 [](Engine\Blueprints\BP_HowTo\EventDispatcher) 문서를 참고하세요.


## 블루프린트 인터페이스

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\InterfaceExample2_5.png)

**블루프린트 인터페이스** 는 모두 특정 함수성을 공유하는 여러 유형 오브젝트와 상호작용할 때 흔히 쓰이는 방법입니다. 즉 차와 나무처럼 완전히 다른 유형의 
오브젝트도 무기로 쏴서 대미지를 입힐 수 있다는 점에서 한 가지 공통점이 있습니다.

OnTakeWeaponFire 함수가 들어있는 **블루프린트 인터페이스** 를 만든 다음 차와 나무에서 그 **블루프린트 인터페이스** 를 구현하면 
차와 나무를 똑같이 취급하여 어느 것이 총에 맞더라도 OnTakeWeaponFire 를 호출하기만 하면 다르게 반응하도록 할 수 있습니다.

이는 직접 블루프린트 통신과 마찬가지로 여전히 1:1 스타일의 통신이지만, 타겟이 메시지를 받을 수도 않을 수도 있다는 점이 다릅니다.
인터페이스는 일종의 계약입니다. "이 인터페이스를 구현하면, 너는 여기 지정된 함수를 구현하고, 내가 호출하면 거기에 반응한다고 약속한다"는 것입니다. 
직접 블루프린트 통신과 인터페이스의 차이는, 직접 통신의 경우 받는 쪽의 블루프린트가 함수에 대해 신경쓰는지 아닌지 구체적으로 알아야 합니다.
인터페이스 메시지는 어디에도 보낼 수 있으며, 신경 쓴다면 반응할 것이고 신경쓰지 않는다면 무시합니다. 무기 발사 예제로 돌아가서, 벽이 대미지에 반응하지 않도록 하려면, 그냥 **OnTakeWeaponFire** 로 인터페이스를 구현하지 않으면 될 것입니다. 

좀 더 자세한 정보는 [](Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces) 문서를 참고하세요.

### 사용 시점

아래 예제 각각은 **블루프린트 인터페이스** 통신 방법을 사용하기에 가장 적함한 경우입니다:

*	**블루플린트에 미리 정의해 둔 변수에 따라 조작했을 때 다른 결과를 내는 함수성이 몇 가지 있습니다.**
	*	플레이어가 화염방사기가 있는데, 사용하면 **ElementalDamage** 라는 이벤트를 호출합니다. 나무 블루프린트가 호출을 받으면 나무를 불태우는 반면, 눈사람 블루프린트는 눈사람을 녹입니다.
	*	플레이어가 "사용" 버튼이 있는데, 누르면 문이 열리고, 불이 꺼지고, 아이템을 줍고 등등의 동작을 합니다.
	*	적이 플레이어의 생명력에 따라 변하는 특수 동작이 있습니다.

블루프린트 인터페이스 셋업 방법 안내는 [](Engine\Blueprints\BP_HowTo\Interfaces) 문서를 참고하세요.


## 통신을 위한 형변환

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\Event6.png)

블루프린트 사이에 통신할 때, 종종 기대하는 "타겟" 블루프린트를 확인해 줘야 합니다. 예를 들어 레벨의 액터와 플레이어 캐릭터 사이에 통신을 하고자 할 때는 어떻게 할까요? 아니면 
액터와 액터 안의 정보에 접근하고 싶은데, 그 액터 자체가 변수일 때(, 예를 들어 레벨에 배치된 화염에 들어서는 액터에 영향을 끼치되, 들어서는 액터에 따라 다르게 할 때)는 어떻게 할까요?

플레이어 캐릭터를 예로 들면, 플레이어가 레벨에 배치된 화염에 들어설 때 대미지를 입게 하고 싶다고 칩시다. 플레이어에게 대미지를 입히고 싶기 때문에, 플레이어 캐릭터 블루프린트가 접근하고자 하는 **타겟 블루프린트** 가 될 것이지만, 공개적으로 노출된 오브젝트 변수가 아니고 게임을 시작하기 전까지는 월드에 존재하지 않기 떄문에 **타겟** 으로 지정할 수가 없습니다.

이런 상황에서는 **블루프린트 형변환** 을 사용하여 플레이어 캐릭터를 **타겟 블루프린트** (캐릭터 블루프린트) 로 **Cast To**, 다른 말로 **X 로 취급** 하되, X 는 접근하고자 하는 **타겟 블루프린트** 가 됩니다.

### 사용 시점
	
**블루프린트 형변환** 을 사용할 수 있는 몇 가지 예제입니다:

[EXCERPT:Castusage]
*	**캐릭터가 레벨의 액터를 조작하면 그에 따라 어떤 식으로 캐릭터에 어떠한 변화가 일어납니다.**
	*	플레이어가 레벨의 헬쓰 팩을 집으면, 플레이어 캐릭터의 헬쓰가 회복됩니다.
	*	적이 눈이나 진흙에 걸어 들어가면, 그 이동 속도를 낮춥니다.
*	**HUD 나 UI 위젯, 세이브 게임, 콘트롤러, 게임 모드 등에 변수를 전달하고자 합니다.
	*	캐릭터 블루프린트의 플레이어 또는 적 헬쓰를 HUD 나 위젯 블루프린트에 전달하여 화면에 값을 표시합니다. 
	*	세이브 게임 블루프린트에 (현재 헬쓰 또는 에너지, 돈, 아이템, 능력) 변수를 전달하여 나중에 복원할 수 있도록 합니다.
*	**다른 블루프린트의 자손인 블루프린트가 여럿 있는데, 그 자손 중 하나에 접근하고자 합니다.**
	*	동물 블루프린트에서 함수성을 공유하는 고양이, 개, 새 블루프린트가 있습니다. 동물 블루프린트를 사용해서 새 블루프린트로 **형변환** 하여 "비행" 함수를 실행합니다.
*	**다른 블루프린트의 변수, 이벤트, 함수에 종속된 블루프린트가 있습니다.** 
	*	손전등에 건전지를 꽂으면 불이 켜지고, 그 불의 세기는 건전지의 값에 의해 결정됩니다.
*	**클래스가 같은 블루프린트 다수에 접근하여 한 번에 전부 같은 방식으로 변경하고자 합니다.**
	*	레벨에 라이트가 여러개 있는데, 이벤트 발생시 전부 켜거나 끄고 싶습니다.
[/EXCERPT:Castusage]

블루프린트 형변환 셋업 관련 길잡이는 [](Engine\Blueprints\BP_HowTo\Casting) 문서를 참고하세요.













