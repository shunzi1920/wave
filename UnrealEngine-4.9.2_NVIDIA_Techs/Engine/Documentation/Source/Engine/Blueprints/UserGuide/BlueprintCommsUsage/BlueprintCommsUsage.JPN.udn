INTSourceChangelist:2550597
INTSourceChangelist:2550597
Availability:Public
Title:ブループリント通信の使用方法
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/UserGuide
Description:ブループリント通信の様々な方法の使用事例の概要 
Related:Engine\Blueprints\UserGuide\BlueprintComms
Related:Engine/Blueprints/UserGuide/EventDispatcher
Related:Engine/Blueprints/UserGuide/CastNodes
Related:Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%](Engine\Blueprints\UserGuide\bp_comms_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%
	[/PARAM]
	[PARAM:description]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine\Blueprints\UserGuide\BlueprintCommsUsage]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%](Engine\Blueprints\UserGuide\bp_comms_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:title%
	[/PARAM]
	[PARAM:description]
		%Engine\Blueprints\UserGuide\BlueprintCommsUsage:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine\Blueprints\UserGuide\BlueprintCommsUsage]
	[/PARAM]
[/OBJECT]
[/VAR]




[TOC(start:2 end:2)]

## 概要

**ブループリント** で作業する場合、他の **ブループリント** に含まれる関数、イベント、変数にアクセスしたいと考えることがあるかもしれません。**ブループリント通信** では、必要に応じて複数の **ブループリント** にアクセスし、複数のブループリント間で通信できるいくつかの方法があります

以下では、様々な通信方法と使用例の概要を示します。詳しいドキュメントについて各セクションにあるリンクを参照してください。 

## ダイレクト ブループリント通信

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\2_9.png)

**ダイレクト ブループリント通信** (すなわち **Blueprint Comms**) は、非常に一般的な通信方法であり、任意のポイントで対話させたい 2 つの **Blueprint Actors** を 
持つ場合に優れた手段です。 

このタイプの通信は常に 1 対 1 です。つまり、あるブループリント (**Working Blueprint (作業ブループリント)**) が、別のブループリント (**Target Blueprint (ターゲット ブループリント)**)  

にアクセスするリクエストをします。**Blueprint Comms** の最も簡単な使用方法は、公開されているオブジェクト変数を通して **ターゲット ブループリント** を参照し、 
次にアクセスしたいブループリントのインスタンスを指定するものです。

詳しい情報については [](Engine\Blueprints\UserGuide\BlueprintComms) をご覧ください。 

### いつ使用するのか

以下は **Blueprint Comms** をどのような時に使用するかの例です。 

*	**レベルにレベル内の他のアクタと通信させたいアクタがある**
	*	レベル内のスイッチとインタラクションすることで特定のドアを開いたり、特定のライトを点灯します (それぞれ別のブループリント)。 

セットアップ方法については、 [ブループリントのキャストのセットアップ方法](Engine\Blueprints\BP_HowTo\DirectBlueprintComs) をご覧ください。 


## イベント ディスパッチャー

![](OpenDoorEventDispatch.png)

**イベント ディスパッチャー** は、情報を使って何をするかは関係ない場合で、何かが起こったことをワールドに通知するのに最適です。イベント ディスパッチャーを使用するパターンは多くの場合 (ただし、必ずしもそうではありませんが) 、以下の通りです。 
何かが別のものをスポーンし (例、レベル ブループリントがボスをスポーン)、スポーンしたものに何か重要なことが起きたときに通知を得るようにイベント ディスパッチャーをつなげます。  

ボスの例で、プレイヤーがボスをキルしたときにドアが開くようにしたいとします。レベル ブループリントはボスをスポーンし、OnDied Event Dispatcher をドアを開いた 
イベントにつなげます。これにより、ボスは汎用のままになります。どのレベルにいるかは関係ないからです。ボスの消滅に関わりがある者に接続を与えます。ただし、ロックされたドアでなくても
 構いません。おそらく、ボスのすべてのミニオンはボスの OnDied デリゲートに接続し、ボスが消滅すると走り去るでしょう。ひとつのイベント ディスパッチャーに必要な数だけものを接続できます。
イベントディスパッチャーが呼び出されると、結合されたすべてのイベントを一度に発行することができます。 

まとめると、イベント ディスパッチャーは、起こったばかりのことに関心がある誰にでもそれを通知するために使用されます。イベント ディスパッチャーによって呼び出されるイベントはブループリントの様々なインスタンスや
ゲームプレイ内の様々なポイントによって異なります。


詳しい情報については [](Engine/Blueprints/UserGuide/EventDispatcher) をご覧ください。 

### いつ使用するのか
 
以下は、**イベントディスパッチャー** を使用可能な例です。 

*	**キャラクター ブループリントから Level ブループリントに通信したい場合**
	*	プレイヤー キャラクターがレベルアップし、以前にロックしたエリアを開けたい場合 
	*	プレイヤー キャラクターが、レベルで何かを行うアクション ボタンを押した場合 
*	**スポーンしたアクタが何かを行った場合にイベントを発行したい場合** 
	*	ボスをスポーンし、ボスがキルされ、その結果ワールドで報酬がスポーンするときにイベントが発行する場合
	*	レベルでアイテム (武器ヘルス、ブーストなど) をスポーンし、イベントを通して、ピックアップされた場合にアイテムとキャラクターに通知する場合

セットアップ方法については、 [ブループリントのキャストのセットアップ方法](Engine\Blueprints\BP_HowTo\EventDispatcher) をご覧ください。 


## ブループリント インターフェース

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\InterfaceExample2_5.png)

**ブループリント インターフェース** では、ある特有の機能性を共有する複数タイプのオブジェクトのインタラクションについて共通のメソッドが可能になります。つまり、武器で狙撃されてダメージを受けるといった 
ある特定の共通項がある車や木などの全く異なるタイプのオブジェクトを持つことができます。 

**OnTakeWeaponFire** 関数を含む **ブループリント インターフェース** を作成し、車と木の両方にその **ブループリント インターフェース** を実装することで、 
車と木を同じように扱うことが可能になり、いずれかが撃たれた時に **OnTakeWeaponFire** 関数を呼び出して、異なる反応をさせることができます。

まだこれはダイレクト ブループリント通信のように一対一の通信です。しかし、ダイレクト ブループリント通信とは異なり、ターゲットはメッセージを受け取ったり、受け取らない場合があります。インターフェイスは 
ある種の契約のようなものです。「このインターフェイスを実装すると、こうした特定の関数を実装し、呼び出したときにそれに反応することを約束します」というようなものです。ダイレクト ブループリント通信と 
インターフェイスの違いは、ダイレクト通信の場合は受信側のブループリントが関数に関心があるか否かを把握しなければなりません。  
インターフェイス メッセージは何にでも送ることが可能であり、相手がそれに関心があれば反応します。そうでなければ無視します。例えば、武器の話に戻ると、壁はダメージに反応してほしくないことでしょう。そのため、**OnTakeWeaponFire** とのインターフェイスは実装しません。 

詳しい情報については [](Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces) をご覧ください。 

### いつ使用するのか

以下の各例は、**ブループリント インターフェース** が最良の通信方法であろうシナリオです。 

*	**定義した他の変数とインタラクションする、または他の変数に基づいている場合に異なる結果を生じうるいくつかの機能性がブループリントにある場合**。
	*	プレイヤーはフレームスロワー (火災放射器) を持っており、使用すると **ElementalDamage** というイベントを発行する場合。Tree ブループリントが呼び出され、Snowman ブループリントが雪だるまを溶かす一方で、木を燃やす場合。 
	*	プレイヤーが "use" ボタンを持ち、ボタンを押すとドアが開く、ライトをオフにする、アイテムをピックアップするなどを行う場合。 
	*	敵がプレイヤーのヘルスに応じて変化する特殊能力を持つ場合。 

セットアップ方法については、[ブループリント インタフェースのセットアップ](Engine\Blueprints\BP_HowTo\Interfaces) をご覧ください。 


## 通信のためのキャスト

![](Engine\Blueprints\UserGuide\BlueprintCommsUsage\BPComHowTo\Event6.png)

ブループリント間で通信する場合、「ターゲット」ブループリントが必要とするものであることを確認する必要がしばしばあります。例えば、レベル内のアクタとプレイヤー キャラクターとの間の通信が必要な場合はどうでしょうか？または、アクタ内の情報にアクセスしたいが、 
アクタ自体が変数である場合はどうでしょう (例、レベルに配置した炎に入ってくるアクタに応じて異なる影響を与える)。 

プレイヤー キャラクターの例で、レベルに配置された炎にプレイヤーが入ってきたらダメージを受けるようにしたいとします。プレイヤーにダメージを適用したいため、プレイヤー キャラクターのブループリントは、アクセスしたい **ターゲット ブループリント** になります。しかし、これは公開されたオブジェクト変数ではなく、ゲームを開始するまでワールドに存在しないため、「ターゲット」としては指定できません。 

こうした状況では、**ブループリント キャスティング** を使用してプレイ可能なキャラクターを **ターゲット ブループリント** (Character ブループリント) に **Cast To** します。すなわち、**X として扱います**。この場合の X はアクセスしたい **ターゲット ブループリント** になります。 

### いつ使用するのか

以下は、**ブループリント キャスティング** のいくつかの使用例です。 

[EXCERPT:Castusage]
*	**レベル内にアクタとインタラクションするキャラクターがいて、結果として、キャラクターに何らかの変化が生じる**
	*	プレイヤーがレベル内でヘルスパックをピックアップし、プレイヤー キャラクターのヘルスを回復する 
	*	敵が雪や泥の中を歩き、移動速度を遅くさせる 
*	**HUD や UI Widget、Save Game、Controller、または Game Mode に変数を渡したい** 
	*	Character ブループリントからプレイヤーまたは敵のヘルスを HUD または Widget ブループリントに渡して値を画面に表示する 
	*	後で復元できるように、Save Game ブループリントに変数 (現在のヘルスまたはエネルギー、マネー、アイテム、能力) を渡す 
*	**別のブループリントの子であるブループリントが複数あり、そのひとつにアクセスしたい**
	*	Animal ブループリントからの機能を共有する Cat、Dog、Bird のブループリントがある。Animal ブループリントを使用して、「Flying」関数を実行するように Bird ブループリントに **Cast To** します。 
*	**別のブループリントの変数、イベント、関数に依存するブループリントがある** 
	*	懐中電灯にバッテリを入れるとライトが点灯し、明るさはバッテリの値によって決まる 
*	**同じクラスの複数のブループリントにアクセスし、同じ方法で一度に修正したい場合**
	*	レベルにいくつか照明があり、イベント発生時に一度に点灯、消灯したい場合 
[/EXCERPT:Castusage]

セットアップ方法については、 [ブループリントのキャストのセットアップ方法](Engine\Blueprints\BP_HowTo\Casting) をご覧ください。 








