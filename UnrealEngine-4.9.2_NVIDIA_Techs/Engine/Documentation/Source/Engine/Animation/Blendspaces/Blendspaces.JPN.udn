INTSourceChangelist:2600840
Availability:Public
Title:ブレンドスペース
Crumbs: %ROOT%, Engine, Engine/Animation
Description:ブレンドスペースは複数入力値に基づいていくつものアニメーションのブレンドを可能にするアセットです。
Related: Engine/Animation/AnimBlueprints
Related: Engine/Content/FBX/Animations
Related: Engine/Animation/AnimMontage
Related: Engine/Animation/PhysicallyDrivenAnimation
Related: Engine/Animation/NodeReference/Blend
Related: Engine/Animation/StateMachines
Related: Engine/Animation/AnimBlueprints/AnimGraph
Related: Engine/Content/Tools/MayaRiggingTool

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Animation/Blend Spaces:title%](Engine/Animation/animation_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/content_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Animation/Blend Spaces:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Animation/Blend Spaces:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Animation/Blend Spaces]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC (start:2)]

## 概要

[EXCERPT:Intro]
**ブレンドスペース** は 2 つの入力値に基づいたアニメーションのブレンドを可能にする 
 **AnimGraphs** でサンプリングされる特別なアセットです。単一入力に基づいた 2 つのアニメーションの簡単なブレンドは、 
 _アニメーション ブループリント_ で利用可能な標準の [Blend ノード](Engine/Animation/NodeReference/Blend)  
のいずれかを使用します。_ブレンドスペース_ は多値（現時点では 2 つの値に制限）に基づいた複数のアニメーションの 
より複雑なブレンドを可能にします。

 _ブレンドスペース_ の目的は、特定のプロパティや条件に基づいたブレンディングの実行に、 
個別にハードコード化したノードを作成する必要性を削減することです。アニメーターやプログラマーに入力、アニメーション、またはアニメーションのブレンドに使用する入力値の使用法の指定を可能にすることにより、 
事実上はいかなるタイプのブレンドも 
汎用 _ブレンドスペース_ を使用して実行することができます。
[/EXCERPT:Intro]




[REGION:topics third]
%Engine/Animation/Blendspaces/Creation:topic%
%Engine/Animation/Blendspaces/Editor:topic%
%Engine/Animation/Blendspaces/UserGuide:topic%
[/REGION]

[REGION:tip]
Locomotion **Blendspace** の例は、セクション 1.3 の [アニメーションのコンテンツ サンプル](Resources\ContentExamples\Animation) ページにもあります。
[/REGION]

## ブレンドスペースはどのように機能するか

 _ブレンドスペース_ の目的は、特定のプロパティや条件に基づいたブレンディングの実行に、 
個別にハードコード化したノードを作成する必要性を削減することです。アニメーターやプログラマーに入力、アニメーション、またはアニメーションのブレンドに使用する入力値の使用法の指定を可能にすることにより、 
事実上はいかなるタイプのブレンドも 
汎用 _ブレンドスペース_ を使用して実行することができます。これはアンリアル・エンジン 3 の 
AnimTree による同タスクの処理方法と全く正反対です。複雑なブレンドはすべて特定のブレンドを処理するために新規ノードの作成が必要になります。 
 _ブレンドスペース_ は完全に汎用的であり、 
ブレンドを決定する係数を各 _ブレンドスペース_ へ指定することができます。それぞれの _ブレンドスペース_ は 
入力値を受け取ります。これらの値は _Animation ブループリント_ (**EventGraph** 経由) の更新サイクル中に演算され、 
ゲームプレイコード、またはその他の手段で操作されます。非常に柔軟な手法により、 _AnimGraph_ の作成者は 
さまざまな方法で調和のとれたアニメーションをブレンドすることができます。

![Input Flow](bs_flow.png)

 _ブレンドスペース_ はある軸に沿ったそれぞれの入力値とグラフのさまざまな点に表示されているアニメーションの 
2D グラフのようなものと捉えることができます。ブレンドアニメーションは、現在の入力値で示される位置に基づいた 
グラフ上のアニメーションをブレンドすることによって計算されます。

![](BlendSpaceLayout_2.png)

1. アニメーション シーケンス 1
1. アニメーション シーケンス 2
1. アニメーション シーケンス 3
1. 入力 1 軸 (X-軸)
1. 入力 2 軸 (Y-軸)


例として、プレイヤーの動きの方向と速さに基づいた「方向性のある走りアニメーション」と「待機アニメーション」 
の一般的なブレンドを見ていきます。

アンリアル・エンジン 3 は、SpeedBlending ノードと一緒に 
DirectionalBlending ノードを使用することによってこのブレンドを実行しました。これらのノードは、特定のブレンドのみを実行するようにそれぞれがハードコード化されていました。ブレンドの実行に使用する値はコードに隠されて、 
プログラマー以外の人がブレンドに微調整を加えることは出来ない仕様でした。 
コードの値を修正すると、AnimTree で使用しているノードの全ての 
インスタンスに影響が及んでいました。これは理想に程遠い方法です。

ブレンドスペースは、単一の _ブレンドスペース_ で上述と同じブレンドを実行することができます。プレイヤーの方向 (例えば -180 から 180 度を表す度) と速度 (例えば 0 から 250 を表す 1 秒間の単位) は 
入力値として _ブレンドスペース_ へ渡され、 
アニメーションはこれらの入力値に基づいて適切な 
ブレンドを設定します。 

![](BlendSpaceDirection.png)(w:720)

単一ノードのみを必要とするだけではなく、入力値は _アニメーション ブループリント_ の EventGraph で直接計算されて、 
その後 AminGraph の _ブレンドスペース_ に渡されます。入力値は簡単に 
微調整できます。アニメーションブレンドの閾値はグラフィカルなエディタを使用して 
素早く直観的に修正することができます。柔軟性と使い勝手の良さが旧システムよりも圧倒的に勝っています。

## 1D ブレンドスペース

 _ブレンドスペース_ は、**_ブレンドスペース 1D_** という 1D 形式でも作成できます。ブレンドスペースでは、ポーズやアニメーションをいくつでもブレンドできますが、単一の入力値に基づき、ブレンドします。ブレンドスペースでは、ポーズやアニメーションをいくつでもブレンドできますが、単一の入力値に基づき、ブレンドします。使用例では走っている時にキャラクタの体を傾かせます。2 つのポーズがあります。ひとつは左への傾き、もうひとつは右への傾きであり、走っているときプレイヤーがキャラクターの向きをどれくらい変えさせるかを操作する入力を使用します。加算した傾きのポーズにブレンドすることによって、急なターンでキャラクタが傾くように見えるため、走っているアニメーションが少し生き生きとしたものになります。

2 つの軸ではなく 1 つの軸だけを持つこと以外は、_ブレンドスペース 1D_ は標準の 2 つの軸の _ブレンドスペース_ と全く同じです。そのため、このドキュメントでは 2D 版に焦点をあてます。しかし、すべてのルールとプロパティは引き継がれることに注意してください。

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
2mkn8FZL2KA
[/PARAMLITERAL]
[/OBJECT]

## アーキテクチャ

 _ブレンドスペース_ の基本的なアーキテクチャは大変シンプルです。主要部分は前述のとおりです。 
入力値とサンプリングされたアニメーションです。

### スケルトン

他のアニメーション アセットタイプ同様に、各 _ブレンドスペース_ は特定の **スケルトン** をターゲットにします。 _ブレンドスペース_ と関連があるスケルトンは、 _ブレンドスペース_ の作成時に設定され、 
_ブレンドスペース_ 内でサンプリングする 
アニメーションを決定します。同じスケルトンをターゲットとしなくてはいけないため、 _ブレンドスペース_ で 
サンプリングする _Animation ブループリント_ を確定します。

### ブレンドパラメータ

[EXCERPT:BlendParameters]
 _ブレンドスペース_ の **ブレンド パラメータ** は、サンプルポーズのブレンドを操作する 
入力値を表します。各 _ブレンドスペース_ は **X** と **Y** の 2 つのブレンドパラメータを持ち、 
ブレンドパラメータには以下のプロパティがあります。

| プロパティ | 説明 |
| -------- | ----------- |
| **Label** | 入力値の軸に沿った **BlendSpace Editor** と、 _Animation Blueprint_ の _AnimGraph_ の _BlendSpace_ ノード上の入力値のデータピンに表示される読み取り可能な名前です。 |
| **Range** | 入力データがクランプされる最低および最高値です。 |
| **Divisions** | 補間に使用したアニメーションデータからのサンプリング点です。値が高ければ高いほどより正確な結果となります。 **BlendSpace Editor** でこの入力値の軸に沿ってグリッド線として表示されます。 |
[/EXCERPT:BlendParameters]

### サンプルデータ

[EXCERPT:SampleData]
 _ブレンドスペース_ の **サンプル データ** は、アニメーションとサンプル値のコレクションです。サンプル値は 
特定アニメーションの重さの決定に使用します。上記の方向を持った動作を例に説明すると、 
 (0.0, 250.0, 0.0) のサンプル値を持つ **_Run_Fwd_** アニメーションは、方向入力値が 0.0 で速度入力値が 250.0 の時に 
完全にブレンドされます。
[/EXCERPT:SampleData]

 _Sample Data_ 配列にある各アイテムには以下のプロパティがあります。 

| プロパティ | 説明 |
| -------- | ----------- |
| **Animation** | アニメーションへブレンドする AnimationSequence アセットです。 |
| **Sample Value** | **Animation** が完全な影響力を持つ入力値（ブレンドパラメータに対応するX、Y値）です。 |





