INTSourceChangelist:2593633
Availability:Public
Title:ルートモーション
Crumbs: %ROOT%, Engine, Engine/Animation
Description:アンリアルエンジン4内でルートベースのアニメーションを処理する方法
Related:Engine/Content/FBX/Animations
Related:Engine/Content/Types/SkeletalMeshes
Related:Engine/Animation/PhysicallyDrivenAnimation
Related:Engine/Content/Tools/MayaRiggingTool
Related:Engine/Animation/AnimBlueprints
Related:Engine/Animation/AnimBlueprints/EventGraph

[TOC(start:2 end:2)]

## 概要

通常のゲームアニメーションは、シーンを通じてキャラクターのコリジョンカプセル（または他の形状）をコントローラーで動かしています。このカプセルからのデータは、その後アニメーション操作に使用されます。例えばカプセルが前進している場合、キャラクターが独力で移動している外観を作成するために、システムはキャラクターに対してランニング、または歩行アニメーションを再生します。

しかしこのタイプのモーションが全ての状況に対して常に理想的とは言えません。ある状況では、コリジョンカプセルの操作に複雑なアニメーションが実際は理にかなっていて、その逆ではありません。このような状況で、ルートモーション処理はゲームにとって重要な課題となります。

例えば、前に飛び出す動作を事前にアニメートしたメッシュによるプレイヤーの特別攻撃を考えてみてください。キャラクターモーションが全てプレイヤーカプセルに基づいている場合、キャラクターはアニメーションが要因となってカプセルの外側へ出されてしまい、効果的なコリジョンが発生しません。一度アニメーションが再生されると、プレイヤーはコリジョン位置へ後退します。通常カプセルは演算全ての中心となるため、これは厄介な問題です。カプセル外のキャラクターはジオメトリを通過して、環境に対し適切に反応しません。加えて、アニメーションの最後にキャラクターがカプセルへ戻るのは現実的ではありません。
 
このコンセプトになじみがないユーザーは、説明を読んだだけでは適切なルートモーションが何故重要なのか簡単に理解できないかもしれません。以下は、前方へ飛び出してハンマーをたたきつける事前アニメートした動作を実行するのアニメーションキャラクターです。キャラクターが前進移動しているアニメーションはゲームで処理していないことに留意してください。アニメーションアーティストがあえてこのように作成しました。

[REGION:warning]
エンジンの初期バージョン (4.5より前のバージョン) は AnimMontage の使用が必須でした(詳細は [AnimMontage documentation](https://docs.unrealengine.com/latest/INT/Engine/Animation/AnimMontage/index.html) を参照してください)。 

バージョン 4.6 以降では、ルート モーションはアニメーション毎に処理されるようになり、ペルソナのアニメーションのプロパティでオン、オフを切り替えることができるようになりました。ルートモーションをフルに活用するには、キャラクターに Animation ブループリントが必要です(詳しい情報は、[Animation ブループリントのドキュメント](https://docs.unrealengine.com/latest/INT/Engine/Animation/AnimBlueprints/index.html) をご覧ください)。キャラクターの Animation ブループリントのプロパティ内にある **Root Motion** セクションから、ルートモーションを適用するアニメーションのタイプを設定できます。このドキュメント作成時点では、ルートモーションをうまく適用するにはAnimMontage をまだ使用する必要があることに注意してください。 
[/REGION]

[REGION:lightbox]
[![](HammerSlamStatic.png)](HammerSlam.gif)
[/REGION]

**クリックして再生**

[REGION:tip]
キャラクターに適用されている **ルートモーション** の例は、セクション 1.9 の [アニメーション コンテンツ サンプル](Resources\ContentExamples\Animation) のページを参照してください。
[/REGION]


## ルートモーションとはなんでしょう？

ルートモーションを簡単に言うと、スケルトンのルートボーンのアニメーションに基づくキャラクターの動作です。ゲーム内のアニメーションのほとんどは、キャラクターのルートが静止したままのサイクルを介して処理されます。いつもそうであるとは限りませんが、上記の例はこの処理を使用しています。これを処理するために、キャラクターからルートのモーションを取り除いて、代わりにキャラクターのカプセルに適用します。これがUE4におけるルートモーションの本質です。

[REGION:warning]
ルートモーションを適切に使用するには、キャラクターのルートボーンが原点 (フロアー上) にあることが重要です。こうすることで、システムがアニメートされた動き (キャラクター) から物理的な動き (カプセル) を隔離できるようになります。 
[/REGION]


アニメーションのルートモーションはペルソナ(Persona)で表示することができます。ルートボーンが動いているいずれかのアニメーションを開いて、ビューポートで [**Show > Bones**] を選択します。アニメーションのプロパティで **Enable Root Motion** を選択しなかった場合は、キャラクターのルートが動くと赤い線が表示されます。これはアニメーションのルートモーションを示しています。

[REGION:fullwidth]
![](RootMotionBone.png)
[/REGION]

ルートモーションを有効にすると、赤い線は消えます。代わりにキャラクターが所定の位置に移動します。これは、キャラクターのルートがオリジナルの位置から移動しなくなるためです。この画像はキャラクターのルートモーションを有効にしています。上記の画像と同一フレームであることに留意してください。しかしキャラクターの位置は変化していません。 

[REGION:fullwidth]
![](RootMotionAppliedBone.png)
[/REGION]


これは何を意味するのでしょうか？システムはキャラクターアニメーションのルートモーションを考慮しているため、キャラクターのコリジョンカプセルへ同じモーションを再び適用することができるようになりました。つまり、アニメーターが意図したモーションと全く同じ動作をさせることも出来ますが、ゲーム内のコリジョンやその他の物理およびゲームプレイイベントに対して適切な反応も行えるようになりました。実際の動作を以下のセクションで見てみましょう。


## 動作中のルートモーション

以下に、ルートモーションなしのアニメーションの問題、そしてアニメーションにルートモーションを処理した時の効果を分析していきます。上述のハンマーを振りかざすキャラクターのアニメーションを使用します。

### ルートモーションなしのアニメーション

ルートモーションなしのアニメーションは、ご覧のとおりキャラクターをカプセルから引き離すようなアニメーションとなります。見苦しい形でカプセルへ急に戻る様子が分かります。アニメーションの再生が終了すると、キャラクターコントローラーがキャラクターを元の位置へ引き戻すためこのような結果となります。

[REGION:lightbox]
[![](HammerSlamStatic_NoRootMotion.png)](HammerSlam_NoRootMotion.gif)
[/REGION]

**クリックして再生**

### カプセルからの分離が悪影響となる理由

ここで対処するのは、スナップバック問題だけではありません。キャラクターはコリジョン形状を離れてしまっているため、ワールドオブジェクトを通過して全体的な継続性がなくなっています。この例は、キャラクターが攻撃に出ると壁を突き抜けてしまい、その後急いでカプセル位置へ戻るのが分かります。


[REGION:lightbox]
[![](HammerSlamStatic_NoRootMotion_Wall.png)](HammerSlam_NoRootMotion_Wall.gif)
[/REGION]

**クリックして再生**

### ルートモーション処理による問題の解決法

アニメーションにルートモーションを設定すると、アニメーターが設定した動作が一時的にカプセルの駆動力となります。これによりアニメーションの終わりまで再生を継続することができます。2番目の攻撃がトリガーされると、新しい位置からの攻撃が開始すのが分かります。もちろんこれはカメラから外れないように最初の攻撃を反転させたものです。



[REGION:lightbox]
[![](HammerSlamStatic_RootMotion_NoWall.png)](HammerSlam_RootMotion.gif)
[/REGION]

**クリックして再生**


### ルートモーションと物理

カプセルが成功したということは、物理コリジョンを従来通り使用してキャラクターが壁を突き抜けてしまう問題を解決出来ることを意味します。また、キャラクターがカプセルの位置へ突然引き戻されてしまう問題も緩和することができます。以下のカプセルを伴うルートモーションを使用したアニメーションは、キャラクターが壁を突き抜けるというよりは、壁と衝突してしまいます。 

キャラクターが前屈みになるアニメーションは、体がいくらか壁を突き抜けてしまっているため完璧なアニメーションとはいえません。しかしこの問題は壁かキャラクターどちらかのコリジョンボリュームと連携することで簡単に対処することができます。重要な点は、カプセルがモーションから遅れずに反応して、キャラクターが壁を突き抜けたりカプセルへスナップバックしないことです。

[REGION:lightbox]
[![](HammerSlamStatic_RootMotion.png)](HammerAnimation_RootMotion_Wall.gif)
[/REGION]

**クリックして再生**


## ルートモーションの設定

UE4 のルートモーションの設定はとても簡単です。しかし、どのバージョンの UE4 を使用しているかに応じて手順は若干異なります。大まかに説明すると、pre-4.6 のプロセスは以下を含みます。

1. (UE4 バージョン 4.6 以降) - 使用するアニメーションを開き、 **Enable Root Motion** プロパティにチェックが入っていることを確認します。
1. ルートモーションコントロールが必要なアニメーションをAnimMontageアセットへ割り当てます。
1. このAnimMontageアセット内のモーションを格納するスロットに必ず名前を付けます。
1. (UE4 Pre-4.6 を使用している場合) AnimMontage 内の、 **Enable Root Motion Translation** と **Enable Root Motion Rotation** プロパティに必ずチェックを入れます。
1. アニムグラフで、アニメーションが **Slot** ノードを流れることと、このノードがユーザーのアニムモンタージュで提供されたものと同じ名前のスロットへ割り当てられていることを確認します。
1. Animation ブループリントのイベントグラフからアニムモンタージュを再生します。 

以下のドキュメントでは、ルートモーションを使用するための上記例の設定方法について説明します。

### 設定の概要

初心者のために、分かりやすく基本的な三人称視点のキャラクターを使用します。実際にはUE4のプロジェクトテンプレートから利用可能なサードパーソンキャラクターテンプレートの派生物を利用しています。1 つだけ特別に追加するのは、 **R** キーを押すとハンマーを振りかざすアニメーションを再生する設定です。攻撃やダメージの処理に発展するコードはありません。ルートモーションに必要なアニメーションの再生手段にすぎません。

いろいろな設定方法があります。ここでは 1 つの方法を概観して、ルートモーション設定に焦点を当てて行きます。

設定は全てカスタム仕様の GameMode ブループリント、カスタム PlayerController ブループリント、カスタム Character ブループリント、カスタム Animation ブループリントで開始します。キャラクターからアニメーションブループリントへイベントを送信するためにブループリントインターフェースを使用します。以下が各ブループリントの内訳です。

* **GameMode** - コントローラーとポーンクラスのみを決定します。それぞれはカスタム仕様のプレイヤーコントローラーとキャラクターブループリントになります。
* **PlayerController** - いくつかのプロパティを単に設定します。これはサードパーソンテンプレートに収録されているものと同じです。
* **Character** - スタティックメッシュとカメラに加え、入力処理を行うコンポーネントを設定する場所です。
* **Animation Blueprint** - キャラクターのアニメーションのステートを処理します。
* **BlueprintInterface** - CharacterブループリントからAnimationブループリントへイベントを送信するために使用します。これが AnimMontage をトリガーする方法です。


ブループリントインターフェース内に関数を作成することから開始します。この例は、関数を「**UseHammer**」と名付けました。この関数に対する入出力値はありません。単にイベントを発生させるために使用します。

![](UseHammerFunction.png)

次にCharacterブループリントで以下の特別なネットワークを設定します。サードパーソン コントロールの処理をあらかじめ準備してください。ハンマーアニメーションを機能させるために必要なものに焦点を当てていきます。この場合、 **R** キーを押すと _UseHammer_ 関数をインターフェースに呼ぶ入力イベントを設定します。

[REGION:fullwidth]
![](PressRUseHammer.png)
[/REGION]

[REGION:note]
 **Get Anim Instance** ノードを使用していることにお気づき下さい。このノードは、アニメーションブループリントの正しいインスタンスとの通信を確認します。関数呼び出しを正しいオブジェクトへ送信する場合に必須となります。
[/REGION]


次に Animation ブループリントにインターフェースが実装済みであることを確認します。

![](ImplementedInterface_AnimBP.png)


Animationブループリントには、関数呼び出しのためにイベントグラフへ簡易なイベントも設定します。 

![](UseHammerFunctionCall.png)

これでアニムモンタージュの設定が整いました。


### アニムモンタージュの設置

ルートモーションはアニムモンタージュ内で処理されるため、アニムモンタージュの作成は必須となります。  
その前に、アニメーションでルートモーションが有効になっていることを確認します。アニメーション シーケンスをダブルクリックしてペルソナを開きます。アニメーション プロパティ (デフォルト位置は左下部) で、チェックボックスをクリックしてルートモーションを有効にするようにします。

![](EnableRootTranslation.png)

これを行ったら、AnimMontage を作成する必要があります。

ルートモーションを必要とするアニメーションを **右クリック** して(Mac では **Ctrl + 左クリック** )、[Create AnimMontage] を選択するのが最も簡単な設定方法です。

 ![](CreateAnimMontage.png)

アニムモンタージュに名前を付けて、ペルソナ (Persona) で開くためにこれを **ダブルクリック** します。エディタ中央下部に「SlotName」欄があります。スロットには意味があり役に立つ名前を入力します。一緒に再生するアニメーションの主要部分を構成する場合はそのような名前を選択します。一般的なスロット名は、例でも使用している「_FullBody_」です。

[REGION:fullwidth]
![](SettingUpSlotinMontage.png)
[/REGION]

次に **Animation ブループリント** へ戻ります。UseHammer関数イベントのすぐ後に、 **Montage Play** ノードを作成します。このノードが適切なアニムモンタージュと関連付けられていることを必ず確認します。

![](PlayMontage.png)

まだ終了ではありません！最後に、最終アニメーションでスロットが計算中であることを確認します。**Animation** ブループリント 内で、[AnimGraph] タブへ移動します。**Slot** ノードを作成して、アニムモンタージュ内のスロットに使用した名前と同じ名前を付けます。この例では「_FullBody_」です。ノードは、既存ステートマシーンか別のアニメーションとFinal Animation Poseノードの間に位置させなくてはいけません。

![](InsertSlotNode.png)

これで完成です！アニメーションは AnimMotage を経由して再生されます。これによりモンタージュはルートモーションを利用して設定されてすべてが機能します！


[REGION:lightbox]
[![](HammerSlamStatic_RootMotion_NoWall.png)](HammerSlam_RootMotion.gif)
[/REGION]

**クリックして再生**


## 注意事項と懸念事項


[INCLUDE:Engine/Animation/AnimMontage#MontageReplication]

ルートモーション中にキャラクターの物理ステートを取り入れています。例えばキャラクターの物理ステートが _Walking_ または _Falling_ の場合、ルートモーションのZ軸は無視されて、重力が適用されます。キャラクターは落下するか、坂を下るか、もしくは階段を上ります。キャラクターの物理ステートが _Flying_ の場合、ルートモーションが完全に適用されて、重力は無視されます。






