Availability:Public
Title:スケルトン アセット 
Crumbs: %ROOT%, Engine, Engine/Animation
Description:スケルトン アセットの概要および UE4 のアニメーションへの適用方法

[REGION:fullwidth]
![](SkeletonImage.png)
[/REGION]

## 概要

アンリアル エンジン 4 におけるスケルトンは、スケルタル メッシュとは関連のないアセットです。各スケルタル メッシュはスケルトンとの関連付けが必要で、全てのアニメーション アセット (例えばアニメーション シーケンス、アニメーション モンタージュ、ブレンド スペースなど) はスケルタル メッシュではなくスケルトンと関連付けされています。

## スケルトンとは何でしょう？

デジタルコンテンツの作成に精通しているユーザーは、既に「スケルトン」について理解があるかと思います。ほとんどの 3D アプリケーションでは、スケルトンはキャラクターのボーンやジョイントの定義に使用するデジタル階級フレームワークで、いろんな意味で実際の生物学スケルトンを模倣します。 

![](MayaSkeleton.png)(w:200)
[REGION:caption]
Maya によく見る典型的なキャラクター スケルトンです。
[/REGION]


重要な違いは、スケルトン アセットはスケルタル メッシュ内部のボーン階層とは _異なる_ ことです。アンリアル エンジン 4 のスケルトン アセットは、 3D 表現の実際のスケルトンとは多少異なり、むしろ特定タイプのキャラクター、またはスケルタル メッシュのボーンや階層情報を保持するリストのようなものです。アニメーションの関連性はこのリストを通じて設定します。 

アニメーション システムにおけるスケルトン アセットの位置づけは、スケルタル メッシュとアニメーションの中間として考えるのが恐らく最も適しています。複数のスケルタル メッシュは同一スケルトン アセットを使用することができます。また、同じスケルトン アセットを使用しているスケルタル メッシュ間でアニメーションを共有することができます。

## 基本的な規則

アンリアル エンジン 4 でアニメーションを行うために、スケルトン アセットについて基本的な以下の項目について知っておいてください。

* どのスケルタル メッシュも、関連するスケルタル アセットが必要となります。
* スケルタル メッシュのインポート中に新規にスケルトン アセットを作成するか、または既存のスケルトン アセットを選択できます。
* スケルトンの最初の比率は、スケルトンを作成した元になるスケルタル メッシュによって定義されています。[retargeting](Engine/Animation/AnimationRetargeting) の際、これはとても重要なことです。
* アニメーションを共有するには、スケルタル メッシュは同じスケルタル アセットを使用 _しなければなりません_ 。
* 同じスケルトン アセットを共有するには、スケルタル メッシュ内のボーン階層の名前の順序に違反していないことが要求されます。以下の [Reusing Skeletons](#スケルトンの再利用) をご覧ください。

![](FBXImportOptions.png)
[REGION:caption]
スケルタル メッシュのインポート時、既存のスケルトン アセットを使用するか、インポートしたメッシュに対して新規作成するかのオプションが表示されます。
[/REGION]

## スケルトンの再利用

スケルトン アセットの重要な機能は、単一のスケルトン アセットを複数のスケルタル メッシュで使用できることです。とりわけ、それぞれのボーン階層を識別する必要すらありません。ただし、それらは同じ一般構造を持つ必要があります。 _最も重要なのは_ あるスケルタル メッシュから別のスケルタル メッシュへのボーン階層は違反することはできません。

つまり、ボーンの名前と順序は一致しなければなりません。_1_、 _2_、 _3_ という名前の 3 ボーン リムを考えて見ましょう。


[REGION:raw]
![](ExampleBoneHierarchy.png)(w:600)
[/REGION]


同じスケルトン アセットに 2 つ目のスケルタル メッシュを使用する場合は、これらのボーンを同じ順番に保つ必要がありますが、階層の周辺にあるボーンを追加する _ことができます_ 。例えば、新規階層はこのように見えます。

[REGION:raw]
![](PeripheralBones.png)(w:600)
[/REGION]

しかしながら、階層の並び替えはできません。例えば、これは有効ではありません。

[REGION:raw]
![](ReorderedBones.png)(w:600)
[/REGION]

### 追加のリム

階層の周辺にあるボーンの追加は有効なので、追加の部分のあるスケルタル メッシュ間でスケルトン アセットを簡単に再利用できます。例えば、異なるけれどもよく似ている 3 つのキャラクター タイプの間でアニメーションを共有したいとします。重要な違いが幾つかありますが、基本的には全て同じボーン構造 (_同じボーン名_) を持っています。

* 人間の男性 (この例では、これが基本のキャラクターとなります)
* ポニーテール用のボーンをもつ人間の女性
* 4 本の手を持つ人間の形をしたキャラクター

同じスケルトン アセットをこれら全てのキャラクターに使用することができます。その結果、スケルトン アセットは _3 種類全ての_ タイプのジョイント階層情報を含むことになります。アニメーションはスケルトン アセットを使って、それぞれのボーンに適用する回転を決定します。スケルタル メッシュは基本となるボーン階層が同じになるように作成されるので、 3 種類の間でアニメーションは完全に機能します。唯一の違いは、これらのキャラクターについている余分な腕やポニーテールを操作するために特別なアニメーションが必要なるということです。

アニメーション データがスケルタル メッシュに含まれないボーンに対して受け取られるたびに (例えば、ポニーテール アニメーションが同じスケルトン アセットを使用しているけどポニーテールのないキャラクターに使用された場合)、アニメーション データは無視されます。

このシステムのパフォーマンス オーバーヘッドはほとんどありません。作成という意味では、一般的には _よく似た_ ボーン階層をもったスケルタル メッシュ間でのみスケルトン アセットを共有するのが良いでしょう。


