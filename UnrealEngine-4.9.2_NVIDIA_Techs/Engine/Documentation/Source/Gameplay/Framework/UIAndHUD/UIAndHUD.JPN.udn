INTSourceChangelist:2100980
Availability:Public
Title:ユーザー インターフェイスと HUD
Crumbs:%ROOT%, Gameplay, Gameplay/Framework
Description:メニューなどのユーザーインターフェース (UI) や HUD を作成するアーティスト、プログラマのためのガイドと情報

<!--
[REGION:header_img]
![hud.jpg](hud.jpg)
[/REGION]

[OBJECT:TopicList]
	[PARAM:icon]
		![](%ROOT%/start_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		UI & HUD
	[/PARAM]
	[PARAM:description]
	[/PARAM]
	[PARAM:links]
		* [](Programming/Slate) - %Programming/Slate:Description%
	[/PARAM]
[/OBJECT]
-->

ゲームとプレイヤーがどのようにコミュニケーションし、相互に作用するかという問題は極めて重要です。ユーザーインターフェース (UI) とヘッドアップ ディスプレイ (HUD) は、ゲームについての情報をプレイヤーに与えたり、場合によってはプレイヤーがゲームと相互に作用できるようにします。

アンリアル　エンジン 4 には、UI と HUD を作成するためのいくつかの方法があります。Canvas クラスを使用すると、スクリーンに直接低レベルな描画を行うことが可能になり、ワールド上にオーバーレイできます。



ゲームのインターフェイスは、プレイヤーに情報を伝達し、指示された入力を促す手段を提供します。 
ゲームのインターフェイスは一般的に HUD またはメニュー、UI の2 つの主要要素で構成されます。

**HUD** とは、ゲームプレイ中にスクリーン上でオーバーレイ表示されるステータスと情報のことです。HUD の目的は、プレイヤーに対して 
現在のゲームの状態、すなわちスコア、ヘルス値、残り時間などを 
重力などの影響を受けます。HUD は通常、インタラクティブではありません。したがって、プレイヤーが HUD 上の要素をクリックすることはありません。 
しかし、ある種のゲームでは、ユーザーインターフェースと見分けることが難しい、どちらともつかない HUD になることがあります。 

**ユーザーインターフェース (UI) ** は、メニューや他のインタラクティブな要素のことを指します。こうした要素はたいてい HUD と同じようにスクリーン上にオーバーレイ表示されます。 
ある状況下では、ゲームのワールドそのものとしてゲーム内のサーフェスに 
レンダリングされることがあります。UI の典型的な例としては、ゲームが起動したときに表示されるメインメニューや、 
プレイヤーがゲームを休止したときに表示されるポーズメニューがあります。ただし、他の UI はゲームプレイ中に表示されることがあります。これらのコンポーネントは、アクタが行うのと同じ方法でプロパティと RPC をレプリケートする場合があります。 
ゲーム内のキャラクタ同士の会話を表示するために使用されます。また、RTS や RPG などのさらに複雑な状況では、 
ゲームプレイ自体に統合されることによって、プレイヤーが武器や防具、作成する部隊を選択できるようにします。 

**HUD**

**HUD** は、スクリーン上にオーバーレイされる要素を表示するための基本クラスです。ゲーム内でユーザーがコントロールするすべてのプレイヤーは、各自で 
`AHUD` クラスのインスタンスを持ち、それらは 各自のビューポートに描画されます。分割スクリーンのマルチプレイヤー ゲームの場合、 
複数のビューポートが同じスクリーンを共有しますが、各 HUD は各自のビューポートに描画します。使用する HUD のタイプやクラスは、 
使用しているゲームタイプによって指定されます。

## Canvas

**Canvas** は、HUD のレンダリング ループ中にテキスト、テクスチャ、マテリアル タイル、任意のトライアングル、単純なプリミティブな形状などのエレメントを 
スクリーンに描画するために使用できるオブジェクトです。何らかの専門的な代替方法を使用しない限りは、 
アンリアル エンジンで作成されたゲーム内で HUD と UI を作成するには  
Canvas を使用して描画します。

## スレート

[INCLUDE:Programming/Slate/Overview#Intro]

* [スレート UI フレームワークはこちらをご一読ください](Programming/Slate)。
