INTSourceChangelist:2423859
Availability:Public
Title:カメラ
Crumbs:%ROOT%, Gameplay, Gameplay/Framework
Description: Camera は、ワールドを見るプレーヤーの視点を表します。

**Camera** は、プレーヤーがどのようにワールドを見ているのか、プレーヤーの視点を表します。従って 
カメラは人間に制御されたプレーヤーのみに関連性をもちます。**PlayerController** は camera クラスを指定し、 
プレーヤーが見ているワールドの位置と方向の計算に使う **カメラ** アクタを 
インスタンス化します。

[REGION:note]
**Cameras** の操作のサンプルは、 [カメラの使用方法](Gameplay\HowTo\UsingCameras) を参照してください。[CameraAnim 機能](Gameplay\HowTo\UsingCameras) を使って、カメラをアニメーションへ重ねることもできます。
[/REGION]

## CameraComponent と CameraActor

カメラのプロパティと動作は全て CameraComponent で設定します。つまり、CameraActor クラスは主に CameraComponent として機能するので、
カメラを他のクラスの中ではなく直接レベルに配置することができます。  

CameraComponent では、カメラをパースペクティブモードにするか、正投影モードにするかの設定ができます。パースペクティブモードに対しては、垂直に合わせる視野角 (FOV) が設定可能で、 
正投影モードに対しては、ワールド単位の幅の設定ができます。どちらのモードも、アスペクト比を設定することができ、 
一般的なデバイスやディスプレイタイプ用のプリセット アスペクト比が設定できます。[ポストプロセス エフェクト](Engine/Rendering\PostProcessEffects) をカメラへ追加したり、ポストプロセスエフェクトの強度をスケーリングすることができます。

エディタにおける視覚的な配置を補助するため、2 つのコンポーネントが CameraComponent に追加されますが、それらはゲーム中には表示されません。FrustumComponent により 
カメラの視野角の場所が表示されます。デフォルトでは非表示ですが、 **ビューポート** の**[Show] > [Advanced] > [Camera Frustums]** を選択すると表示することができます。StaticMeshComponent は 
 レベル内のカメラの配置を表示します。 


## PlayerCameraManager

PlayerCameraManager クラスは、カメラマネージャーです。ビルトインされている動作により、ペンディングしているビュータッゲットとコンソールのコマンドでトリガーされるデバッグカメラがデフォルトでブレンドされます。もしくは、 
カメラの視点、またその他全てのカメラ設定をどうするのか ViewTarget にクエリーを行います。通常は PlayerCameraManager サブクラスは必要ありません。 
自動ルールでは不十分な場合、ViewTarget を設定するルールを追加することができます。

PlayerCameraManager のサブクラス化が必要で、これを C++コードではなくブループリントで行う場合、カメラのカスタム実装に「BlueprintUpdateCamera」関数を使用します。戻り値を使用するために _true_ を返すか、
戻り値を無視するために _false_ を返します。

### ViewTarget

PlayerCameraManager で定義される ViewTarget 構造体は、理想的な視点 (POV) を持った PlayerCameraManager を提供します。ViewTarget は、ターゲットアクタ、
ターゲットアクタのコントローラ (ローカル以外で制御されるポーン）、スペクテート中のポーンの遷移やその他の変更を通じて同一プレーヤーを追尾するために使用する PlayerState に関する情報を含みます。POV プロパティ経由で PlayerCameraManager へパスされるカメラ情報は、
 'FMinimalViewInfo' 構造体形式です。この構造体には、位置、回転、投影モード (パースペクティブまたは正投影) 、FOV 、正投影幅、アスペクト比、ポストプロセスエフェクトなど、
CameraComponent からの基本的なカメラ情報が含まれます。これらの値を PlayerCameraManager が受け取ることにより、
PlayerCamera はカメラマネージメント中に 2 つのカメラモードをブレンドすることができます。 


## Camera Responsibility Chain

ゲーム固有のカメラ動作は、カメラの「Chain of Responsibility」と一緒にどの時点でも提供することができます。ALocalPlayer へ渡す前に、以下のクラスを通じて上から下へフローし、レンダリング、シーン表示、そして関連システムで終了します。

### CameraComponent 

ViewTarget が CameraActor または CameraComponent を含み bFindCameraComponentWhenViewTarget が _true_ に設定されているアクタである場合、
CameraComponent はカメラのプロパティに関する情報を提供します。`bTakeCameraControlWhenPossessed` は、すべてのポーンに設定することができる関連プロパティです。これにより、PlayerController に所有されるとポーンは自動的に ViewTarget になります。

### Actor or PlayerController

PlayerController とアクタの両方に CalcCamera 関数が含まれています。アクタの CalcCamera 関数は、「bFindCameraComponentWhenViewTarget」が _true_ で CameraComponent が存在する場合、アクタの最初の CameraComponent のカメラビューを返します。  
そうでない場合は、アクタの位置と回転を取得します。PlayerController の CalcCamera 関数の動きは 2 つ目のケースと似ており、所有されたポーンが存在する場合は 
その位置および PlayerController の回転制御を返します。  


### PlayerCameraManager

PlayerCameraManager 内の UpdateViewTarget 関数は、ViewTarget にクエリを実行して、 ViewTarget の POV を返します。APlayerCamera がサブクラス化されていて、CameraComponent 経由で見ていない場合、 
この関数はいわゆる BlueprintUpdateCamera でもあります。

