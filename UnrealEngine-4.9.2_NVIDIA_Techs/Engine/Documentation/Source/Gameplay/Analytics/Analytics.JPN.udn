INTSourceChangelist:2426297
Availability:Public
Title:インゲーム分析
Crumbs: %ROOT%, Gameplay
Description:インゲーム分析を使用して、プレイヤーの動向を追跡しバランスを保つ

[TOC (start:2 end:2)]

## 概要
ゲームの実施状況に関するデータを取得するためには、データのキャプチャおよび処理をする分析プロバイダが必要です。自社開発ソリューションがない場合、 
無料サービスから有料サービスに至るまで、幅広いオプションがあります。アンリアル エンジンは、 1 つ以上の分析プロバイダと通信するための抽象インターフェースを備えています。ゲームではインターフェースを使用し、 
分析プロバイダが補助的な実装となります。Epic から提供済みのプロバイダが入っている場合もあります。バージョン 4.5 以前は、Epic はマルチキャスト分析イベントを実装し、
それらを複数のプロバイダに中継していました。プロバイダに対しては、有料のプロバイダ用サポート [Swrve](http://www.swrve.com) があります。アンリアル エンジン 4.5 以降では、iOS 上での無料サービスで、
主にデバッグ用に使われるファイルベース システムの [Apsalar](http://www.apsalar.com) がサポートされています。利用できるプロバイダ用プラグインは徐々に増えていきます。 
必要であれば、自分のプロバイダを追加することもできるようになります。 

## ゲームの調整
プレイヤーの継続率をキャプチャするには、分析プロバイダをゲームに登録します。これはプロジェクトの `DefaultEngine.ini` ファイルを使って行いますので、デフォルト プロバイダを 
登録する必要があります。希望に応じて、ゲームの異なるビルドタイプに対して、別のプロバイダとアカウント詳細を登録することもできます。以下のセクションは 
 Apsalar プラグインの例です。

	[Analytics]
	ProviderModuleName=IOSApsalar
	ApiKey=YourAnalyticsKey1
	ApiSecret=YourAnalyticsSecret1
	SendInterval=60

	[AnalyticsDevelopment]
	ApiKey=YourAnalyticsKey2
	ApiSecret=YourAnalyticsSecret2
	SendInterval=60

	[AnalyticsTest]
	ApiKey=YourAnalyticsKey3
	ApiSecret=YourAnalyticsSecret4
	SendInterval=60

`[Analytics]` セクションは、使用しているデフォルトのことで、、デフォルトのプロバイダ モジュール名を設定します。上記のケースでは、4.5 リリースの一部の IOSApsalar プラグインを 
設定しました。`ApiKey` と `ApiSecret` フィールドは、 Apsalar ウェブサイトのものです。アカウントを作成すると、使用するキーと秘密が与えられます。

プロジェクト用の設定が完了すれば、分析イベントを記録する準備が整いました。基本的な継続率を取得するには、ゲームの開始と共にセッションを作成し、 
フォアグラウンドから消えた時点でセッションを終了する必要があります。方法は、以下のコード行、
あるいはバージョン 4.5 以降についている [ブループリント分析プラグイン](Gameplay/Analytics/Blueprints) を使用して行います。

	FAnalytics::Get().GetDefaultConfiguredProvider()->StartSession();
	FAnalytics::Get().GetDefaultConfiguredProvider()->EndSession();

これらのコールをゲームの一部とすると、プレイヤーの継続率の自動収集が始まります。基本的な継続率が収集が終わったら、 
さらにイベントを追加すれば、ゲームにおけるプレイヤーのビヘイビアをもっと詳しく知ることができます。 
