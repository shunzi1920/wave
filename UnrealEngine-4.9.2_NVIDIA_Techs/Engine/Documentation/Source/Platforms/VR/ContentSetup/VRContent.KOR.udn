INTSourceChangelist:2609228
Availability:Public
Title:가상 현실 실전 사례
Crumbs:%ROOT%, Platforms, Platforms/VR
Description:가상 현실 개발에 대한 정보입니다.
Navigation:platform

[VAR:Params]
[PARAM:image]
	![%Platforms:title%](%ROOT%/placeholder_topic.png)
[/PARAM]
[PARAM:icon]
	![](%ROOT%/platform_icon.png)(convert:false)
[/PARAM]
[PARAM:title]
	%Platforms:title%
[/PARAM]
[PARAM:description]
	%Platforms:description%
[/PARAM]
[PARAM:path]
	[RELATIVE:Platforms]
[/PARAM]
[/VAR]

[VAR:Topic]
[OBJECT:Topic]
%params%
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
%params%
[/OBJECT]
[/VAR]

[VAR:Role]
[OBJECT:Role]
%params%
[PARAMLITERAL:id]
platforms
[/PARAMLITERAL]
[/OBJECT]
[/VAR]

[TOC(start:2)]

가상 현실(VR)용 콘텐츠 개발시 최적의 사용자 경험을 보장하기 위해서 작업방식에 약간의 조정이 필요합니다.
이 가이드의 목적은 VR 프로젝트용 콘텐츠 개발시 알아둬야 할 몇 가지 중요 사안들을 짚어드리는 데 
도움이 되고자 함입니다.


## 월드 스케일

월드의 스케일을 제대로 잡는 것이 VR 플랫폼에서 최적의 사용자 경험을 내는 데 도움이 되는 가장 중요한 것 중 하나입니다.
스케일을 잘못 잡으면 온갖 종류의 감각계통 문제가 유발될 수 있으며, 심지어 시뮬레이션 멀미가 날 수도 있습니다.
오브젝트는 플레이어의 카메라와 **0.75 에서 3.5 미터 까지** 거리에 있을 때 VR 로 가장 쉽게 볼 수 있습니다.
UE4 에서 **1 언리얼 유닛(UU)은 1 센티미터(cm)와 같습니다**. 즉 언리얼에서 VR 사용시 플레이어의 카메라에서 **75 UU 에서 350 UU 까지** 
떨어져 있는 오브젝트가 가장 잘 보입니다.
 
| 거리 | 언리얼 유닛(UU) 거리 |
| --- | --- |
| 1 센티미터 | 1 언리얼 유닛 |
| 1 미터 |100 언리얼 유닛 |
| 1 킬로미터 | 100,000 언리얼 유닛 |

월드의 스케일은 UE4 내 **월드 세팅** 아래 있는 **World to Meters** 변수로 조정할 수 있습니다.
월드의 스케일을 조정할 때는 다시 한 번 주의를 기울여야 하는 것이, 잘못된 스케일을 선택하면 
월드와 사용자 사이 연결이 끊어질 수 있어, 시뮬레이션 멀미가 날 수 있기 때문입니다.

![](T_VR_World_To_Meters_00.png)

## 시뮬레이션 멀미

Simulation Sickness, 시뮬레이션 멀미 는 VR 월드에서 HMD 디바이스 사용시 발생할 수 있는 일종의 멀미 현상입니다. 시뮬레이션 멀미 는 
사용자의 VR 경험에 크게 영향을 끼칠 수 있으며, 어떤 경우에는 전체적인 VR 경험을 망치기도 합니다. 사용자가 안좋은 
VR 경험 할 확률을 줄이기 위해서는, 아래 나열된 실전 사례를 **세밀해** 따라 주시기 바랍니다. 그러지 않으면 사용자는 
매우 불쾌한 VR 경험을 하고 말 수가 있습니다.

* 개발자들은 VR 디바이스 사용에 너무 익숙해져 있어서 **최악의** 테스트 대상입니다. 시뮬레이션 멀미가 생기지 않도록 하기 위해서는 가급적 다양한 사람들에게 게임을 확인시켜 보도록 하십시오.
* 시네마틱 케마라처럼 플레이어에게서 카메라 이동 제어권을 앗아가는 것은 무엇이든 **_피하도록_** 하세요. 최악의 VR 경험을 남기는 가장 큰 주범입니다.
* 필드 오브 뷰(FOV)를 수동으로 덮어쓰지 **_마시고_**, 이 옵션을 사용자가 편집할 수 있도록 노출시키지도 **마십시오**. 이 값은 헤드셋과 렌즈의 물리적인 지오메트리와 맞아 떨어져야 하며, 디바이스의 SDK 및 내부 환경설정을 통해 자동으로 설정될 것입니다. 일치되지 않는다면 고개를 돌릴 때마다 월드가 워프하는 것처럼 보여, 불편함이나 메스꺼움이 유발될 수 있습니다.
* 대부분의 일인칭 게임에서 볼 수 있는 카메라 효과인 "Walking Bob", 걸음걸이에 따라 카메라를 흔들리게 하는 효과를 넣지 **_마십시오_**. 인체의 운동을 흉내내기 위해 카메라를 위아래로 움직이게 만들면 플레이어에게 시뮬레이션 멀미를 유발하여 VR 경험을 망칠 것입니다.
* 이벤트를 플레이어에게 연계시키려고 할 때 카메라를 "흔들지" **_마십시오_**. 수류탄이 플레이어 옆에서 터지는 경우, 카메라를 흔드는 것이 VR 게임이 아닌 경우에는 합당할 수 있지만, VR 게임에서는 시뮬레이션 급 멀미가 생길 수 있습니다.
* VR 게임용 월드와 레벨을 디자인할 때, 평소보다 빛과 색을 어둡게 하도록 하십시오. VR 게임에서 강하고 현란한 라이팅은 시뮬레이션 멀미를 보다 빠르게 생기도록 할 수 있습니다. 평소보다 시원한 색에 어두운 라이트를 사용하면 이러한 현상을 피할 수 있습니다.
* 프레임 속도를 가급적 높게 유지하도록 하십시오. 프레임 속도가 낮은 것 역시도 시뮬레이션 멀미의 요인 중 하나로, 게임 최적화는 가급적 항상 신경쓰도록 하십시오. 디바이스의 주사율보다는 높은 프레임 속도를 유지해야 합니다 (DK1 의 경우 60 fps, DK2 는 75 fps 입니다).
* 계단보다는 승강기를 사용하세요. 플레이어가 매우 빠르게 움직일 때, 특히나 계단같은 것을 오르내릴 때는 방향감각이 매우 혼동될 수 있습니다.
* 플레이어는 모드 최대 속도부터 시작해야 하며, 천천히 가속해서 최대 속도로 가지 않아야 하고, 이동 속도는 항상 고정된 비율의 속도여야 합니다.
* 뎁스 오브 필드나 모션 블러 포스트 프로세스는 사용자가 보는 것에 크게 영향을 끼칠 수 있으며, 무엇보다도 시뮬레이션 멀미를 매우 빨리 유발할 수 있기에 사용하지 **마십시오**.


시뮬레이션 멀미를 유발하는 주요 문제점들은 이 정도이며, 몇 가지 더 있습니다.

## VR 캐릭터 세팅

VR 헤드셋을 사용하는 캐릭터 셋업은 표준 캐릭터에 비해 살짝 다릅니다. 캐릭터 신장, 폭, 속력, 카메라 위치 모두 VR 캐릭터에 적합하도록 
약간씩은 조정을 해야 합니다.

[REGION:tip]
 VR 월드용 오브젝트를 제작할 때는, 디지털 오브젝트의 스케일을 현실의 대응물과 동일하게 만드는 것이 중요합니다.
 현실의 것보다 크게 혹은 작게 만들면 이루고자 하는 몰입감을 해칠 수 
 있습니다.
[/REGION]
 
 **캐릭터 신장 & 폭**

캐릭터 신장 & 폭은 실제 측정치에 가급적 가까워야 합니다. 너무 크거나 작으면 
이루고자 하는 몰입감을 해칠 수 있습니다.

|프로퍼티|UE4 기본 | VR 추천 |
|---| --- | --- |
|신장:| 192 CM|176 CM|
|폭:| 84 CM|68 CM|

**이동 속력**

VR 이동 속력은 추천하기가 어려운 속성인데, 이동 속도는 이루고자 하는 경험의 종류에 따라 
크게 달라지는 부분이기 때문입니다. 엘리멘탈 VR 데모를 예로 들면, 이동 속력은 보통 속력의 
1/4 이었습니다.

|프로퍼티|UE4 기본 | VR 추천 |
|---| --- | --- |
|이동 속력:|60 M/S|24 M/S|

**카메라 위치**

VR 카메라는 캐릭터의 눈 위치에 있는 것을 보정하기 위해 기본 눈 높이보다 약간 낮게 위치시켜 줘야 합니다.

|프로퍼티|UE4 기본 | VR 추천 |
|---| --- | --- |
|기본 눈 높이:|180 CM|160 CM|

## VR 콘텐츠 고려사항

VR 콘텐츠 제작시 기억할 것은, 사용자가 콘텐츠를 여러 각도에서 본다는 점입니다. 
과거에 문제가 없었지만 VR 에서는 피해야 하는 것들 몇 가지는 이렇습니다:

* **스케일** - VR 월드에서 오브젝트의 스케일 관련해서 할 수 있는 최선은, 가급적 현실에 가깝게 하는 것입니다. 가상의 오브젝트 크기를 현실 대응물보다 크게 또는 작게 만들면 혼동 또는 시뮬레이션 멀미가 날 수 있습니다.
* **폴리곤 면 생략** - 표준 게임에서는 플레이어가 볼 수 없는 오브젝트의 폴리곤 면들을 제거해도 괜찮을 뿐만 아니라 권장할 만한 일이기까지 합니다. 하지만 VR 게임에서는 플레이어의 시점 자유도가 훨씬 높기 때문에, 이러한 예전 방식은 플레이어에게 보여서는 안될 것을 보이게 될 수 있으므로 더이상 통하지 않습니다.

## 블루프린트 함수
 
 VR 헤드셋과의 상호작용을 돕는 블루프린트 함수가 여럿 있습니다. 이 함수들은 블루프린트 에디터 내 **Head Mounted Display** 메뉴에서 
 찾을 수 있습니다.

 ![](T_BlueprintHMD.jpg)

|블루프린트 노드 이름| 기능 | 
|---| --- |
Enable Low Persistence Mode|낮은 지속 모드 켜기 - 낮은/최대 지속 모드를 전환합니다. |
Get Orientation And Position|방향과 위치 구하기 - HMD 의 현재 방향과 위치를 구합니다. |
Get Positional Tracking Camera Parameters|위치 추적 카메라 파라미터 구하기 - HMD 에 위치 추척 카메라가 있는 경우, 카메라의 게임 월드 위치를 반환할 뿐만 아니라, 추적에 묶인 구역에 대한 파라미터도 같이 반환합니다. 그 덕에 올바른 위치 추적 범위의 제대로 된 게임내 표현이 가능합니다. 카메라를 사용할 수 없거나 HMD 가 지원하지 않는 경우, 모든 값은 0 이 됩니다. |
Has Valid Tracking Position|유효 추적 위치 있는지 - HMD 가 위치 추적을 지원하는 경우, 현재 추적중인지 여부입니다. |
Is In Low Persistence Mode| 낮은 지속 모드인지 - HMD 가 낮은 지속 모드에 있으면 _true_, 아니면 _false_ 를 반환합니다. |
Reset Orientation And Position| 방향과 위치 리셋 - 롤과 핏치를 0 으로 설정하여 오리엔테이션을 리셋시킵니다. 현재 요는 정방향이고, 현지 위치는 (위치 추적을 위해) '영점'으로 간주합니다. |

## 알려진 문제점

HMD 디바이스용 이미지를 렌더링하고 표시하는 데 필요한 자료의 양은 꽤나 많으며, 그때문에 
언리얼 엔진의 일부 기능은 현재, HMD 디바이스 사용시에는 작동하지 않습니다. 아래는 HMD 디바이스에 대해 현재 알려진 문제와, 우회 가능한 경우 그 방법을 
포함한 전체 목록입니다.

|알려진 문제점| 우회법 | 
|---| --- |
| 텍스처 블러 / 진동 | UE4 가 안티-앨리어싱에 사용하는 TemporalAA 떄문에 일어납니다. 현재 우회법은 포스트 프로세스 볼륨 세팅에서 AA 메소드를 FXAA 나 None 으로 바꾸어 TemporalAA 를 끄는 것입니다. 
| 스크린 스페이스 리플렉션(SSR)| 현재 지원되지 않으며 작동하지 않을 것입니다. 하지만 [Reflection Probes](Resources/Showcases/Reflections#리플렉션인바이언먼트) 는 정상 작동할 것입니다. 



**노멀 매핑 문제**

VR 에서 오브젝트의 노멀 맵을 볼 때, 그 임팩트가 예전만 못하다는 것을 알게 될 것입니다. 
왜냐면 노멀 매핑은 망원경 디스플레이나 모션 패럴랙스를 고려하지 않기 때문입니다. 그때문에 노멀맵은 
VR 디바이스에서 볼 때 평평해 보입니다. 이에 대한 우회법은 둘 중 하나입니다.

|셰이더 유형 | 설명 |
|---|---|
|[패럴랙스 매핑](http://en.wikipedia.org/wiki/Parallax_mapping)| 패럴랙스 매핑은 노멀 매핑이 고려하지 않는 뎁스 큐를 고려하여 한 단계 발전된 것입니다. 패럴랙스 매핑 셰이더는 오브젝트의 디테일을 원래보다 살려 주어 깊이 정보를 더욱 잘 표시해 줍니다. 그 이유는 어느 각도에서 보든, 패럴랙스 맵은 그 시점에서 올바른 깊이 정보를 표시하는 데 그 자체적으로는 항상 맞기 때문입니다. 패럴랙스 맵을 사용하기 가장 좋은 곳은, 자갈밭 길이나 디테일이 세밀한 표면입니다.
|[테셀레이션 셰이더 디스플레이스먼트](Resources/ContentExamples/MaterialNodes/1_11) | 테셀레이션 셰이더 디스플레이스먼트는 모델링되지 않은 디테일을 오브젝트 속에 추가하여 3D 지오메트리를 실시간 대체하는 것입니다. 테셀레이션 셰이더는 정보 표시에 정말이지 뛰어난데, 테셀레이션 셰이더가 버텍스를 추가로 생성하여 3D 스페이스에 대체시켜 실제로 빠져있는 디테일을 만들어내 주기 때문입니다. |
