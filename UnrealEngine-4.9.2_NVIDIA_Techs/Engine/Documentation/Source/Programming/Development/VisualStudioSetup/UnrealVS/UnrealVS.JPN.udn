INTSourceChangelist:2566867
Availability:Public
Title:UnrealVS 拡張
Crumbs: %ROOT%, GettingStarted, Programming, Programming/Development/VisualStudioSetup
Description:Visual Studio に対応するUnrealVS 拡張のインストール、設定、使用方法
Version:4.5

[EXCERPT:Overview]
Visual Studio に対応する UnrealVS 拡張により、アンリアル・エンジンを使った開発は、共通の動作へのアクセスが容易になりました。

![](unrealvs_toolbar_cmd.png)

以下の機能が含まれます：

* スタートアップ プロジェクトの設定
* スタートアップ プロジェクトをビルドする結合コマンド
* コマンド ライン引数の設定
* プロジェクトのバッチビルド
* クイックビルド プロジェクト メニュー

[REGION:note]
UnrealVS 拡張は **Visual Studio Express** 版と **連動しません。**Visual Studio Professional とのみ互換性があります。
[/REGION]
[/EXCERPT:Overview]


## インストールと設定

**UnrealVS 拡張機能：**

1. ご利用のVisual Studio バージョンの拡張を以下で探してください。

		[UE4RootLocation]/Engine/Extras/UnrealVS/<VS-Version>/UnrealVS.vsix

1. 「UnrealVS.vsix」ファイルをダブルクリックして実行しインストールを開始します。

1. UnrealVS 拡張は、特定の Visual Studio バージョンをターゲットにしています。インストーラがご利用のバージョンをターゲットにしていること、およびそのボックスにチェックが入っているこをと確認します。先に進むには、![Install](button_install.png) ボタンをクリックします。

	![](install_dialog.png)
1. インストールが完了したら、 ![Close](button_close.png) ボタンをクリックします。

	![Install Complete](install_complete_dialog.png)

1. Visual Studio を実行すると、 **Tools->Extensions and Updates...** で拡張が表示されます。

	![Extension Manager](extension_manager.png)

	[REGION:note]
	Visual Studio が既に実行中の場合、拡張のロード及び表示前に再起動してください。
	[/REGION]

1. 拡張は **Help->About Microsoft Visual Studio** ダイアログの [Installed Products] リストにも表示されます。

1. **View->Toolbars** に進むか、または Visual Studio のツールバーエリアで右クリックして、**UnrealVS** を選択して拡張のツールバーを表示します。

	![UnrealVS Toolbar](unrealvs_toolbar_cmd.png)

1. デフォルトで、ツールバーは上の図のように表示されますが、その内容は以下の手順でカスタマイズできます。**Tools->Customize...** で、**[コマンド]** タブにある **[UnrealVS]** ツールバーを選択します。

	![UnrealVS Customize Toolbar](toolbar_customize.png)

1. Customize	のダイアログで、**[Add Command...]** を選択し、カテゴリ リストから **UnrealVS** を選択し、ツールバーに追加可能な UnrealVS コマンドを表示します。

	![UnrealVS Customize Commands](toolbar_customize_commands.png)


## スタートアップ プロジェクト

**[Startup Project]**ドロップダウンは _startup projects_ を迅速に設定したり切り替える手段です。 
このソリューションで実行可能ファイルをビルドするために利用できるプロジェクトの一覧が自動的に表示されます。
リストで選択したプロジェクトは、現在の _startup project_ として設定されます。

![](startup_project_menu.png)

UnrealVS オプションに何を一覧表示するかを変更することができます。Game プロジェクトだけを表示するには、 **[Tools] > [Options...]** に進み **UnrealVS** を選択します。 

![](options_screen.png)

### スタートアップ プロジェクトをビルドする

拡張には、現在の _startup project_ をビルドするコマンドも含まれ、 
ホットキーとの結合やカスタムコマンドを実行する手段として使用出来ます。

**コマンドとホットキーの結合：**

1. **[Tools] > [Options...]** を選択後、**[Options]** ダイアログに表示される **「Keyboard」** を選択します。

1. コマンドリストから**[_UnrealVS.BuildStartupProject_]** コマンドを選択します。 

	[REGION:tip]
		検索ボックスに「`UnrealVS`」と入力してリストをフィルタにかけます。
	[/REGION]

	![Filtered Command List](build_startup_search.png)

1. コマンドを選択後、**[Press Shortcut Keys]** ボックスをクリックして、コマンドの実行に使用するコンビネーションキーを選択します。以下の例では、**Ctrl + Alt + Shift + B** となっています。

	![Shortcut Keys](build_startup_keys.png)

	[REGION:note]
		既に割り当て済みのコンビネーション キーは選択しないでください。 
		**[Shortcut currently used by]** ボックスは、 
		選択されたコンビネーションが既に使用済みであることを警告するために表示されます。
	[/REGION]

1.  ![Assign](button_assign.png) ボタンを押すと、キーとコマンドが結合されます。 
	キーは**[Shortcuts for selected command]** ボックスに表示されます。

	![Assigned Keys](build_startup_assigned.png)

1.  ![OK](button_ok.png) をクリックして変更を保存します。これにより、次回ショートカットを使用すると _startup project_ に設定されたプロジェクトが自動的にビルドされます。


## コマンドライン引数

デバッグセッションの実行時に、現在のプロジェクトの**Command Arguments** 設定に **Command-Line** コントロールが 
使用されます。プロジェクトの**Properties**を通じて設定するショートカットです。実際に、 
 ここで加えられた変更は、自動的に **Properties** へ反映されます。

逆もまた同様です。この引数は、デバッグセッションが開始すると 
実行ファイルへ渡されます。

![Command Arguments](unrealvs_toolbar_args.png)

[REGION:note]
	アンリアル エディタをビルドするゲーム プロジェクトのプロジェクト config が、コマンドラインにプロジェクト名を自動的に追加し、アンリアル エディタの実行可能ファイルに対してどのプロジェクトを使用しているかを自動的に知らせます。
	例えば、ビルド config 'Debug Editor' を使用して QAGame をビルドする場合、コマンドラインでは、ボックスで入力する必要なしに、QAGame.uproject がコマンド引数に追加されます。
	QAGame のエディタを起動するには、 **Command-Line** コントロールを空のままにしても、アンリアル エディタはどのプロジェクトが実行中であるかを認識します。
[/REGION]

利用可能な全ての引数のリストは、[コマンドライン引数](Programming/Basics/CommandLineArguments) から参照出来ます。

## プロジェクトのリフレッシュ

[](Programming/UnrealBuildSystem/ProjectFileGenerator) を使用することにより、プロジェクト ファイルを Visual Studio 内で生成することができます。 
「.bat」ファイルへ移動して手動で実行する必要がないため、 
同期とプロジェクトファイルの更新にかかる時間の短縮が出来ます。

**プロジェクトファイルをリフレッシュするには：**

1. **[UnrealVS]** ツールバーに表示される Refresh Projects ![Refresh Projects](button_refresh.png) ボタンを押します。

1. プロセスが開始すると、 **[Output]** ウィンドウにプロジェクト生成プロセス表示されます。

	![Project Generator Output](refresh_output.png)

1. プロンプト時に必要なプロジェクトを再ロードします。

## Batch Builder

**UnrealVS Batch Builder** は、ビルド ジョブのカスタムセットを作成し、実行する手段を提供します。Visual Studio の **Build->Batch Build...** オプションよりも多用途に使用できます。

**Batch Builder ウィンドウを開く方法**

1. **UnrealVS** ツールバー上の Batch Builder ![Batch Builder](button_batchbuilder.png) ボタンを押すか、コマンド _UnrealVS.BatchBuilder_ に割り当てたキーボードのショートカットを使用します。 
(**UnrealVS** コマンドでキーボードのショートカットをセットアップする手順については、上記の **スタートアッププロジェクトをビルドする** を参照してください。)

1. **UnrealVS Batch Builder** ウィンドウが表示されます。

	![Batch Builder Window](batchbuilder_window.png)

	* Project、Config、Platform、ジョブ タイプを設定して **Build Job** を作成します。
	* 矢印ボタンでジョブを追加/削除します。
	* 矢印ボタンで選択したジョブをリスト内で上下に移動します。
	* こうしたコントロールでコンボボックスに現在表示されている **ジョブセット** を編集します。
	* 新規の **ジョブセット** を作成するには、新しい名前をコンボボックスに入力します。
	* ドロップダウン リストを使用して既存の **ジョブセット** を選択することができます。
	* **[Delete]** ボタンで、選択した **ジョブセット** をリストから削除します。
	* **[Start]** ボタンで現在の **ジョブセット** のバッチ ビルド タスクを開始/終了します。
	* **ジョブセット** は次回のために、ロードされたソリューションに対して .suo ファイルに格納されます。

1. **[Start]** をクリックすると、バッチビルドの進捗を表す**[Output]** タブが表示されます。

	![Batch Builder Window running](batchbuilder_window2.png)

	* 実行しているセットの **Build Jobs** が出力リストに表示されます。
		* ![Queued Build Job](buildjob_lightgrey.png) - 待機中のジョブ
		* ![Succeeded Build Job](buildjob_green.png) - 完了、成功
		* ![Failed Build Job](buildjob_red.png) - 失敗
		* ![Cancelled Build Job](buildjob_orange.png) - キャンセル
		* 現在、**実行中のビルド ジョブが太字で表示されます**
	* バッチ ビルド実行中にビジーのアニメーションと停止ボタンが表示されます。

1. 各 **Build Jobs** から、**Output タブ** のアイテムをダブルクリックするか、または右クリックしてコンテキストメニューから **Show Output** を選択して出力を見ることができます。

	![BatchBuild Output Pane](batchbuilder_outputpane.png)

	[REGION:note]
		各アイテムに対する **Batch Builder** 出力の表示は、_UnrealVS - BatchBuild_ という名前のペインにある Visual Studio **[Output]** ウィンドウに表示されます。
		これを、現在の/最後のビルド ジョブの出力を表示する _Build_ と間違わないようにしてください。
	[/REGION]	

## クイックビルド メニュー

**Quick Build** メニューは、メインのソリューション ビルド config を変更する必要なく、どのconfig とプラットフォームの組み合わせでもプロジェクトをビルドする簡単な方法を提供します。

![Quick Build Menu](menu_quickbuild.png)

1. **[Solution Explorer]** で Project ノードを右クリックします。

1. *UnrealVS Quick Build* メニューには、アンリアル エンジン ソリューションで利用可能なプラットフォームとビルド config のサブメニューがあります。

1. 選択したプロジェクト、プラットフォーム、config をビルドするためのアイテムを選択します。これは、IDE でソリューションのコンフィギュレーション、ソリューションのプラットフォームを変更し、
ビルドを開始し、次に config とプラットフォームを再度切り替えることに比べるとはるかに迅速です。

[REGION:note]
	IDE でソリューションの config とプラットフォームを変更するよりも迅速です。
[/REGION]	

## UnrealVS ソースコードでの作業

UnrealVS のソースコードは [UE4RootLocation]/Engine/Source/Programs/UnrealVS/ フォルダにあります。  

Visual Studio で UnrealVS プロジェクトファイルをロードするためには、UnrealVS をコンパイルする Visual Studio の適切なバージョンの Visual Studio SDK をインストール済である必要があります。例えば、Visual Studio 2013 までをサポートする場合、以下をインストールする必要があります。 [Visual Studio 2013 SDK](http://www.microsoft.com/en-us/download/details.aspx?id=40758)、次に UnrealVS プロジェクト ファイルを Visual Studio 2013 にロードします。

